{"version":3,"file":"index.js","sources":["../index.ts"],"sourcesContent":["import { useCallback, useRef } from 'react';\n\nconst useDragDrop = ({\n    onDragStart,\n    onDragEnter,\n    onDragOver,\n    onDragLeave,\n    onDragEnd,\n    onDrop,\n    effectAllowed,\n    dropEffect,\n    ignoreChildEnterLeave,\n    ignoreSelf\n}: {\n    /** when drag start */\n    onDragStart?: (source: Element) => void;\n    /** drag enter the droppable element */\n    onDragEnter?: (source: Element, target: Element) => void;\n    /** drag over the droppable element, frequent trigger */\n    onDragOver?: (source: Element, target: Element) => void;\n    /** drag leave the droppable element  */\n    onDragLeave?: (source: Element, target: Element) => void;\n    /** drop on a droppable element */\n    onDrop?: (source: Element, target: Element) => void;\n    /** release drag or press esc or drop on a invalid element */\n    onDragEnd?: (source: Element) => void;\n    /** set the effectAllowed when dragStart */\n    effectAllowed?: DataTransfer['effectAllowed'];\n    /** set dropEffect when dragOver */\n    dropEffect?: DataTransfer['dropEffect'];\n    /** don't call enter or leave when enter a child element of current dragEnter element */\n    ignoreChildEnterLeave?: boolean;\n    /** ignore dragOver, dragOver, dragLeave, drop events on the dragged element */\n    ignoreSelf?: boolean;\n}) => {\n    const sourceDomRef = useRef(null);\n    const prevTargetDomRef = useRef(null);\n    const enterCounterRef = useRef(0);\n\n    const checkEvent = useCallback(\n        e => {\n            if (!sourceDomRef.current) return false;\n            if (ignoreSelf && sourceDomRef.current === e.currentTarget) return false;\n            return true;\n        },\n        [ignoreSelf]\n    );\n\n    const clean = useCallback(() => {\n        sourceDomRef.current = null;\n        prevTargetDomRef.current = null;\n        enterCounterRef.current = 0;\n    }, []);\n\n    const handleDragStart = useCallback(\n        e => {\n            clean();\n            sourceDomRef.current = e.currentTarget;\n            e.dataTransfer.effectAllowed = effectAllowed;\n            onDragStart?.(e.currentTarget);\n        },\n        [clean, effectAllowed, onDragStart]\n    );\n    const handleDragEnd = useCallback(\n        e => {\n            onDragEnd?.(e.currentTarget);\n            clean();\n        },\n        [clean, onDragEnd]\n    );\n\n    const handleDragEnter = useCallback(\n        e => {\n            if (!checkEvent(e)) return;\n            e.dataTransfer.dropEffect = dropEffect;\n            if (ignoreChildEnterLeave) {\n                if (e.currentTarget === prevTargetDomRef.current) {\n                    enterCounterRef.current++;\n                } else {\n                    enterCounterRef.current = 1;\n                    onDragEnter?.(sourceDomRef.current!, e.currentTarget);\n                }\n                prevTargetDomRef.current = e.currentTarget;\n                return;\n            }\n            onDragEnter?.(sourceDomRef.current!, e.currentTarget);\n        },\n        [checkEvent, dropEffect, ignoreChildEnterLeave, onDragEnter]\n    );\n    const handleDragOver = useCallback(\n        e => {\n            if (!checkEvent(e)) return;\n            e.preventDefault();\n            e.dataTransfer.dropEffect = dropEffect;\n\n            onDragOver?.(sourceDomRef.current!, e.currentTarget);\n        },\n        [checkEvent, dropEffect, onDragOver]\n    );\n    const handleDragLeave = useCallback(\n        e => {\n            if (!checkEvent(e)) return;\n            if (ignoreChildEnterLeave && e.currentTarget === prevTargetDomRef.current) {\n                enterCounterRef.current--;\n                if (enterCounterRef.current <= 0) {\n                    onDragLeave?.(sourceDomRef.current!, e.currentTarget);\n                    prevTargetDomRef.current = null;\n                }\n                return;\n            }\n            onDragLeave?.(sourceDomRef.current!, e.currentTarget);\n        },\n        [checkEvent, ignoreChildEnterLeave, onDragLeave]\n    );\n    const handleDrop = useCallback(\n        e => {\n            if (!checkEvent(e)) return;\n            onDrop?.(sourceDomRef.current!, e.currentTarget);\n            clean();\n        },\n        [checkEvent, clean, onDrop]\n    );\n\n    const sourceProps = {\n        draggable: true,\n        onDragStart: handleDragStart,\n        onDragEnd: handleDragEnd\n    };\n    const targetProps = {\n        onDragEnter: handleDragEnter,\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        onDrop: handleDrop\n    };\n    return [sourceProps, targetProps];\n};\n\nexport default useDragDrop;\n"],"names":[],"mappings":"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"}