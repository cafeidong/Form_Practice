"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _date = require("../util/date");

var _CalendarContext = _interopRequireDefault(require("../CalendarContext"));

var _excluded = ["type", "mode", "onClick"],
    _excluded2 = ["value", "type", "mode", "switchMode"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var HeaderButtonWithoutMemo = function HeaderButtonWithoutMemo(_ref) {
  var _context$components;

  var type = _ref.type,
      mode = _ref.mode,
      onClick = _ref.onClick,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var handleClick = (0, _react.useCallback)(function () {
    return onClick(type);
  }, [onClick, type]);
  var context = (0, _react.useContext)(_CalendarContext.default);
  var cls = (0, _react.useMemo)(function () {
    var prefixCls = context.prefixCls;
    return "".concat(prefixCls, "-header-button ").concat(prefixCls, "-header-button-").concat(type);
  }, [context.prefixCls, type]);
  var display = (0, _react.useMemo)(function () {
    switch (type) {
      case 'prevMonth':
        return '‹';

      case 'nextMonth':
        return '›';

      case 'prevYear':
      case 'prevDecade':
      case 'prevCentury':
        return '«';

      case 'nextYear':
      case 'nextDecade':
      case 'nextCentury':
        return '»';
    }
  }, [type]);

  var props = _objectSpread({
    onClick: handleClick,
    className: cls,
    children: display
  }, rest);

  return (_context$components = context.components) !== null && _context$components !== void 0 && _context$components.HeaderButton ? /*#__PURE__*/_react.default.createElement(context.components.HeaderButton, (0, _extends2.default)({
    mode: mode,
    type: type
  }, props)) : /*#__PURE__*/_react.default.createElement("div", props);
};

var HeaderButton = /*#__PURE__*/(0, _react.memo)(HeaderButtonWithoutMemo);

var HeaderSwitcherWithoutMemo = function HeaderSwitcherWithoutMemo(_ref2) {
  var value = _ref2.value,
      type = _ref2.type,
      mode = _ref2.mode,
      switchMode = _ref2.switchMode,
      rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);
  var display = (0, _react.useMemo)(function () {
    switch (type) {
      case 'date-month':
        return value.getMonth() + 1;

      case 'date-year':
      case 'month':
        return value.getFullYear();

      case 'year':
        {
          var baseYear = (value.getFullYear() / 10 | 0) * 10;
          return "".concat(baseYear, " - ").concat(baseYear + 9);
        }

      case 'decade':
        {
          var _baseYear = (value.getFullYear() / 100 | 0) * 100;

          return "".concat(_baseYear, " - ").concat(_baseYear + 99);
        }
    }
  }, [value, type]);
  var handleClick = (0, _react.useCallback)(function () {
    if (type === 'decade') return;

    switch (type) {
      case 'date-month':
        switchMode('month');
        break;

      case 'date-year':
        switchMode('year');
        break;

      case 'month':
        switchMode('year');
        break;

      case 'year':
        switchMode('decade');
        break;
    }
  }, [type, switchMode]);

  var _useContext = (0, _react.useContext)(_CalendarContext.default),
      prefixCls = _useContext.prefixCls,
      components = _useContext.components;

  var cls = (0, _react.useMemo)(function () {
    return "".concat(prefixCls, "-header-switcher ").concat(prefixCls, "-header-switcher-").concat(type);
  }, [prefixCls, type]);

  var props = _objectSpread({
    onClick: handleClick,
    className: cls,
    children: display,
    value: value
  }, rest);

  return components !== null && components !== void 0 && components.HeaderSwitcher ? /*#__PURE__*/_react.default.createElement(components.HeaderSwitcher, (0, _extends2.default)({
    mode: mode,
    type: type
  }, props)) : /*#__PURE__*/_react.default.createElement("span", props);
};

var HeaderSwitcher = /*#__PURE__*/(0, _react.memo)(HeaderSwitcherWithoutMemo);
var CalMap = {
  prevMonth: {
    unit: 'month',
    count: -1
  },
  nextMonth: {
    unit: 'month',
    count: 1
  },
  prevYear: {
    unit: 'year',
    count: -1
  },
  nextYear: {
    unit: 'year',
    count: 1
  },
  prevDecade: {
    unit: 'year',
    count: -10
  },
  nextDecade: {
    unit: 'year',
    count: 10
  },
  prevCentury: {
    unit: 'year',
    count: -100
  },
  nextCentury: {
    unit: 'year',
    count: 100
  }
};

var Header = function Header(_ref3) {
  var value = _ref3.value,
      onChange = _ref3.onChange,
      mode = _ref3.mode,
      onModeChange = _ref3.onModeChange;
  var handleButtonClick = (0, _react.useCallback)(function (type) {
    var _CalMap$type = CalMap[type],
        unit = _CalMap$type.unit,
        count = _CalMap$type.count;
    onChange((0, _date.add)(value, count, unit));
  }, [onChange, value]);
  var handleModeChange = (0, _react.useCallback)(function (mode) {
    return onModeChange === null || onModeChange === void 0 ? void 0 : onModeChange(mode);
  }, [onModeChange]);

  var _useContext2 = (0, _react.useContext)(_CalendarContext.default),
      prefixCls = _useContext2.prefixCls,
      monthBeforeYear = _useContext2.monthBeforeYear;

  var cls = (0, _react.useMemo)(function () {
    var headerPrefix = prefixCls + '-header';
    return {
      header: "".concat(headerPrefix, " ").concat(headerPrefix, "-").concat(mode),
      switcherWrap: headerPrefix + '-switcher-wrap'
    };
  }, [prefixCls, mode]);
  var buttonProps = {
    onClick: handleButtonClick,
    mode: mode
  };
  var switcherProps = {
    value: value,
    switchMode: handleModeChange,
    mode: mode
  };

  switch (mode) {
    case 'date':
      return /*#__PURE__*/_react.default.createElement("div", {
        className: cls.header
      }, /*#__PURE__*/_react.default.createElement(HeaderButton, (0, _extends2.default)({
        type: "prevYear"
      }, buttonProps)), /*#__PURE__*/_react.default.createElement(HeaderButton, (0, _extends2.default)({
        type: "prevMonth"
      }, buttonProps)), /*#__PURE__*/_react.default.createElement("span", {
        className: cls.switcherWrap
      }, monthBeforeYear ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(HeaderSwitcher, (0, _extends2.default)({
        type: "date-month"
      }, switcherProps)), /*#__PURE__*/_react.default.createElement(HeaderSwitcher, (0, _extends2.default)({
        type: "date-year"
      }, switcherProps))) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(HeaderSwitcher, (0, _extends2.default)({
        type: "date-year"
      }, switcherProps)), /*#__PURE__*/_react.default.createElement(HeaderSwitcher, (0, _extends2.default)({
        type: "date-month"
      }, switcherProps)))), /*#__PURE__*/_react.default.createElement(HeaderButton, (0, _extends2.default)({
        type: "nextMonth"
      }, buttonProps)), /*#__PURE__*/_react.default.createElement(HeaderButton, (0, _extends2.default)({
        type: "nextYear"
      }, buttonProps)));

    case 'month':
      return /*#__PURE__*/_react.default.createElement("div", {
        className: cls.header
      }, /*#__PURE__*/_react.default.createElement(HeaderButton, (0, _extends2.default)({
        type: "prevYear"
      }, buttonProps)), /*#__PURE__*/_react.default.createElement("span", {
        className: cls.switcherWrap
      }, /*#__PURE__*/_react.default.createElement(HeaderSwitcher, (0, _extends2.default)({
        type: "month"
      }, switcherProps))), /*#__PURE__*/_react.default.createElement(HeaderButton, (0, _extends2.default)({
        type: "nextYear"
      }, buttonProps)));

    case 'year':
      return /*#__PURE__*/_react.default.createElement("div", {
        className: cls.header
      }, /*#__PURE__*/_react.default.createElement(HeaderButton, (0, _extends2.default)({
        type: "prevDecade"
      }, buttonProps)), /*#__PURE__*/_react.default.createElement("span", {
        className: cls.switcherWrap
      }, /*#__PURE__*/_react.default.createElement(HeaderSwitcher, (0, _extends2.default)({
        type: "year"
      }, switcherProps))), /*#__PURE__*/_react.default.createElement(HeaderButton, (0, _extends2.default)({
        type: "nextDecade"
      }, buttonProps)));

    case 'decade':
      return /*#__PURE__*/_react.default.createElement("div", {
        className: cls.header
      }, /*#__PURE__*/_react.default.createElement(HeaderButton, (0, _extends2.default)({
        type: "prevCentury"
      }, buttonProps)), /*#__PURE__*/_react.default.createElement("span", {
        className: cls.switcherWrap
      }, /*#__PURE__*/_react.default.createElement(HeaderSwitcher, (0, _extends2.default)({
        type: "decade"
      }, switcherProps))), /*#__PURE__*/_react.default.createElement(HeaderButton, (0, _extends2.default)({
        type: "nextCentury"
      }, buttonProps)));

    default:
      return null;
  }
};

var _default = /*#__PURE__*/(0, _react.memo)(Header);

exports.default = _default;