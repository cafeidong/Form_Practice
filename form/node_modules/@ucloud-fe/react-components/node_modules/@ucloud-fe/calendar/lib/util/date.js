"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDaysInMonth = exports.format = exports.add = void 0;
exports.set = set;
var DaysMap = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var INVALID_DATA_STRING = 'Invalid Date';
var REGEX_FORMAT = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g;
var TS_HOUR = 60 * 60 * 1000;
var TS_DAY = 24 * TS_HOUR;

var padZero = function padZero(s, length) {
  s = '0000' + s;
  return s.substr(s.length - length);
};

var getDaysInMonth = function getDaysInMonth(d) {
  var month = d.getMonth();
  var year = d.getFullYear();

  if (month === 1) {
    var over = new Date(year, 1, 29).getMonth() === 2;
    return over ? 28 : 29;
  } else {
    return DaysMap[month];
  }
};

exports.getDaysInMonth = getDaysInMonth;

var format = function format() {
  var d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var format = arguments.length > 1 ? arguments[1] : undefined;
  if (d == null) return '';
  if (d.toString() === INVALID_DATA_STRING) return INVALID_DATA_STRING;
  var $y = d.getFullYear();
  var $M = d.getMonth();
  var $D = d.getDate();
  var $d = d.getDay();
  var $H = d.getHours();
  var $m = d.getMinutes();
  var $s = d.getSeconds();
  var matches = {
    YY: String($y).slice(-2),
    YYYY: $y,
    M: $M + 1,
    MM: padZero($M + 1, 2),
    D: $D,
    DD: padZero($D, 2),
    d: $d,
    H: $H,
    HH: padZero($H, 2),
    m: $m,
    mm: padZero($m, 2),
    s: $s,
    ss: padZero($s, 2)
  };
  return format.replace(REGEX_FORMAT, function (match, $1) {
    return $1 || matches[match] || '';
  });
};

exports.format = format;

var add = function add(d, value, unit) {
  switch (unit) {
    case 'hour':
      {
        return new Date(+d + TS_HOUR * value);
      }

    case 'date':
      {
        return new Date(+d + TS_DAY * value);
      }

    case 'month':
      {
        var month = d.getMonth();
        var year = d.getFullYear();
        var date = d.getDate();
        var newD = new Date(d);
        var newYear = year + (month + value) / 12 | 0;
        var newMonth = ((month + value) % 12 + 12) % 12;
        var newDate = Math.min(getDaysInMonth(new Date(newYear, newMonth, 1)), date);
        newD.setDate(newDate);
        newD.setFullYear(newYear);
        newD.setMonth(newMonth);
        return newD;
      }

    case 'year':
      {
        var _year = d.getFullYear();

        var _newD = new Date(d);

        _newD.setFullYear(_year + value);

        return _newD;
      }
  }

  return d;
};

exports.add = add;
var SetMap = {
  ms: 'setMilliseconds',
  second: 'setSeconds',
  minute: 'setMinutes',
  hour: 'setHours',
  date: 'setDate',
  month: 'setMonth',
  year: 'setFullYear'
};

function set(d, value, unit) {
  var newD = new Date(+d);

  if (typeof value === 'number') {
    newD[SetMap[unit]](value);
  } else {
    for (var _key in value) {
      var v = value[_key];
      if (v != null) newD[SetMap[_key]](v);
    }
  }

  return newD;
}