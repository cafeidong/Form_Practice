"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _CalendarContext = _interopRequireDefault(require("../CalendarContext"));

var _classnames = _interopRequireDefault(require("../util/classnames"));

var _excluded = ["index", "onClick", "mode", "value"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function CellWithoutMemo(_ref) {
  var _context$components;

  var index = _ref.index,
      onClick = _ref.onClick,
      mode = _ref.mode,
      value = _ref.value,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var handleCellClick = (0, _react.useCallback)(function () {
    return onClick(index);
  }, [onClick, index]);
  var context = (0, _react.useContext)(_CalendarContext.default);

  var props = _objectSpread({
    onClick: handleCellClick
  }, rest);

  return (_context$components = context.components) !== null && _context$components !== void 0 && _context$components.Cell ? /*#__PURE__*/_react.default.createElement(context.components.Cell, (0, _extends2.default)({
    mode: mode,
    value: value
  }, props)) : /*#__PURE__*/_react.default.createElement("div", props);
}

var Cell = /*#__PURE__*/(0, _react.memo)(CellWithoutMemo);

function TBody(_ref2) {
  var cells = _ref2.cells,
      onCellClick = _ref2.onCellClick,
      col = _ref2.col,
      row = _ref2.row,
      mode = _ref2.mode;

  var _useContext = (0, _react.useContext)(_CalendarContext.default),
      prefixCls = _useContext.prefixCls;

  var cls = (0, _react.useMemo)(function () {
    return {
      body: prefixCls + '-tbody',
      row: prefixCls + '-row',
      cell: prefixCls + '-cell',
      emptyCell: prefixCls + '-cell-empty',
      firstDisabledCell: prefixCls + '-cell-disabled-first',
      lastDisabledCell: prefixCls + '-cell-disabled-last'
    };
  }, [prefixCls]);
  var handleClick = (0, _react.useCallback)(function (index) {
    var cellInfo = cells[index];
    if (!cellInfo) return;
    onCellClick(index);
  }, [cells, onCellClick]);

  var renderBody = function renderBody() {
    var info = [];

    for (var i = 0; i < row; i++) {
      var group = [];
      var first = true;

      for (var j = 0; j < col; j++) {
        var index = i * col + j;
        var cellInfo = cells[index];
        var isFirstDisabled = false;
        var isLastDisabled = false;

        if (cellInfo !== null && cellInfo !== void 0 && cellInfo.disabled) {
          if (first) {
            isFirstDisabled = true;
            first = false;
          }

          var nextCellInfo = cells[index + 1];

          if (j >= col - 1 || !(nextCellInfo !== null && nextCellInfo !== void 0 && nextCellInfo.disabled)) {
            isLastDisabled = true;
          }
        } else {
          first = true;
        }

        group.push( /*#__PURE__*/_react.default.createElement(Cell, {
          key: index,
          className: (0, _classnames.default)(cls.cell, !cellInfo && cls.emptyCell, cellInfo === null || cellInfo === void 0 ? void 0 : cellInfo.className, isFirstDisabled && cls.firstDisabledCell, isLastDisabled && cls.lastDisabledCell),
          index: index,
          onClick: handleClick,
          mode: mode,
          value: cellInfo === null || cellInfo === void 0 ? void 0 : cellInfo.value,
          disabled: cellInfo === null || cellInfo === void 0 ? void 0 : cellInfo.disabled
        }, cellInfo === null || cellInfo === void 0 ? void 0 : cellInfo.children));
      }

      info.push( /*#__PURE__*/_react.default.createElement("div", {
        key: i,
        className: cls.row
      }, group));
    }

    return info;
  };

  return /*#__PURE__*/_react.default.createElement("div", {
    className: cls.body
  }, renderBody());
}

var _default = /*#__PURE__*/(0, _react.memo)(TBody);

exports.default = _default;