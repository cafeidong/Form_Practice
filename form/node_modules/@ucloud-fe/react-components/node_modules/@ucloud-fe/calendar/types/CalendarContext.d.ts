import React, { ComponentType } from 'react';
import { CalendarComponents } from 'src/interface';
export interface TCalendarContext {
    locale?: {
        months: string[];
        weekdays: string[];
    };
    prefixCls?: string;
    components?: CalendarComponents;
    monthBeforeYear?: boolean;
    onlyValidYear?: boolean;
    onlyValidDecade?: boolean;
    onChangeWhenPrevNextClick?: boolean;
    disabledPrevNextClickWhenDisabled?: boolean;
}
export declare const DefaultContext: Required<TCalendarContext>;
export declare type ContextKeys = keyof TCalendarContext;
export declare const contextKeys: (keyof TCalendarContext)[];
declare const CalendarContext: React.Context<TCalendarContext>;
export default CalendarContext;
export declare const pickContext: <T>(obj: T & TCalendarContext) => [TCalendarContext, T];
export declare const useCalendarContext: <T>(props: T & TCalendarContext) => [TCalendarContext, T];
export declare const withContext: <T>(Component: React.ComponentType<T>) => React.MemoExoticComponent<(props: T & TCalendarContext) => JSX.Element>;
