import React from 'react';
import { CollapseProps } from '../../components/Collapse/hooks';
import { Key, TreeData, LoadData } from './interface';
export interface TreeProps {
    /** 数据源 */
    dataSource: TreeData[];
    /** 是否禁用 */
    disabled?: boolean;
    /** 是否支持多选 */
    multiple?: boolean;
    /** 选中的数据 controlled */
    selectedKeys?: Key[];
    /** 默认选中的数据 uncontrolled */
    defaultSelectedKeys?: Key[];
    /** 选中变化回调 */
    onChange?: (v: Key[]) => void;
    /** 异步加载数据操作 */
    loadData?: LoadData;
    /** collapse 的配置，参考 collapse 组件 */
    collapseProps?: CollapseProps;
    /** 使用搜索 */
    search?: true | {
        /** 自定义搜索函数 */
        handleSearch?: (searchValue: string, dataSource: TreeData[]) => {
            dataSource: TreeData[];
            count: number;
            openKeys: Key[];
        };
    };
}
export declare type TreeRef = {
    /**
     * 全选
     * @public
     */
    selectAll: () => void;
    /**
     * 全部取消选择
     * @public
     */
    unSelectAll: () => void;
    /**
     * 反选
     * @public
     */
    inverse: () => void;
};
declare const _default: React.MemoExoticComponent<React.ForwardRefExoticComponent<TreeProps & React.RefAttributes<TreeRef>>>;
export default _default;
