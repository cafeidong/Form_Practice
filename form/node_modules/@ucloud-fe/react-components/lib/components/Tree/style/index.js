"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.STree = exports.loadingIconCls = exports.expandPlaceholderCls = exports.expandedCls = exports.latestCls = exports.wrapCls = exports.innerIndentCls = exports.outerIndentCls = exports.indentCls = exports.contentCls = exports.expandCls = exports.selectedCls = exports.itemCls = exports.disabledCls = exports.multipleCls = exports.singleCls = exports.prefixCls = void 0;

var _newArrowCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/newArrowCheck"));

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _core = require("@emotion/core");

var _config = _interopRequireDefault(require("../../../config"));

var _style = require("../../../style");

var _this = void 0;

var _prefixCls = _config.default.prefixCls;
var prefixCls = _prefixCls + '-tree';
exports.prefixCls = prefixCls;
var singleCls = prefixCls + '-single';
exports.singleCls = singleCls;
var multipleCls = prefixCls + '-multiple';
exports.multipleCls = multipleCls;
var disabledCls = prefixCls + '-disabled';
exports.disabledCls = disabledCls;
var itemCls = prefixCls + '-item';
exports.itemCls = itemCls;
var selectedCls = prefixCls + '-selected';
exports.selectedCls = selectedCls;
var expandCls = prefixCls + '-expand-icon';
exports.expandCls = expandCls;
var contentCls = prefixCls + '-content';
exports.contentCls = contentCls;
var indentCls = prefixCls + '-indent';
exports.indentCls = indentCls;
var outerIndentCls = prefixCls + '-indent-outer';
exports.outerIndentCls = outerIndentCls;
var innerIndentCls = prefixCls + '-indent-inner';
exports.innerIndentCls = innerIndentCls;
var wrapCls = prefixCls + '-wrap';
exports.wrapCls = wrapCls;
var latestCls = prefixCls + '-latest';
exports.latestCls = latestCls;
var expandedCls = prefixCls + '-expanded';
exports.expandedCls = expandedCls;
var expandPlaceholderCls = prefixCls + '-expand-ph';
exports.expandPlaceholderCls = expandPlaceholderCls;
var loadingIconCls = prefixCls + '-loading-icon';
exports.loadingIconCls = loadingIconCls;
var STree = (0, _style.sWrap)({})((0, _styledBase.default)("div", {
  target: "e3zry1o0",
  label: "STree"
})(function (props) {
  (0, _newArrowCheck2.default)(this, _this);
  var DT = props.theme.designTokens;
  return /*#__PURE__*/(0, _core.css)("background:", DT.T_COLOR_BG_TRANSPARENT, ";color:", DT.T_COLOR_TEXT_DEFAULT_DARK, ";.", itemCls, "{display:flex;color:", DT.T_COLOR_TEXT_DEFAULT_DARK, ";min-height:36px;.", indentCls, "{width:32px;position:relative;flex-shrink:0;&.", innerIndentCls, "{::after{content:' ';box-sizing:border-box;display:inline-block;height:100%;width:1px;border-left:1px solid ", DT.T_COLOR_LINE_DEFAULT_LIGHT, ";margin-left:50%;}&.", latestCls, "{::after{height:50%;width:4px;border-bottom:1px solid ", DT.T_COLOR_LINE_DEFAULT_LIGHT, ";}}}}.", wrapCls, "{flex:1;padding:0 8px;cursor:pointer;display:inline-flex;align-items:center;:hover{background:", DT.T_COLOR_BG_DEFAULT_HOVER, ";}.", contentCls, "{margin-left:8px;}}&.", disabledCls, "{color:", DT.T_COLOR_TEXT_DISABLED, ";.", wrapCls, "{cursor:default;}}}&.", singleCls, " .", itemCls, ".", selectedCls, "{color:", DT.T_COLOR_TEXT_PRIMARY_DEFAULT, ";}.", expandPlaceholderCls, ",.", expandCls, ",.", loadingIconCls, "{display:inline-block;width:16px;height:16px;line-height:16px;margin-right:8px;flex-shrink:0;}.", loadingIconCls, "{fill:", DT.T_COLOR_TEXT_PRIMARY_DEFAULT, ";}.", expandCls, "{text-align:center;cursor:pointer;transition:transform 0.2s;position:relative;:before{content:' ';display:inline-block;width:0;height:0;border-style:solid;border-width:5px 0 5px 6px;border-color:transparent transparent transparent ", DT.T_COLOR_TEXT_DEFAULT_LIGHT, ";position:absolute;top:3px;left:5px;}&.", disabledCls, "{cursor:default;color:", DT.T_COLOR_TEXT_DISABLED, ";:before{border-color:transparent transparent transparent ", DT.T_COLOR_TEXT_DISABLED, ";}}&.", expandedCls, "{transform:rotate(90deg);}};label:STree;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1RyZWUvc3R5bGUvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkJrQiIsImZpbGUiOiIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9UcmVlL3N0eWxlL2luZGV4LnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5cbmltcG9ydCBjb25maWcgZnJvbSAnc3JjL2NvbmZpZyc7XG5pbXBvcnQgeyBzV3JhcCB9IGZyb20gJ3NyYy9zdHlsZSc7XG5cbmNvbnN0IHsgcHJlZml4Q2xzOiBfcHJlZml4Q2xzIH0gPSBjb25maWc7XG5leHBvcnQgY29uc3QgcHJlZml4Q2xzID0gX3ByZWZpeENscyArICctdHJlZSc7XG5leHBvcnQgY29uc3Qgc2luZ2xlQ2xzID0gcHJlZml4Q2xzICsgJy1zaW5nbGUnO1xuZXhwb3J0IGNvbnN0IG11bHRpcGxlQ2xzID0gcHJlZml4Q2xzICsgJy1tdWx0aXBsZSc7XG5leHBvcnQgY29uc3QgZGlzYWJsZWRDbHMgPSBwcmVmaXhDbHMgKyAnLWRpc2FibGVkJztcbmV4cG9ydCBjb25zdCBpdGVtQ2xzID0gcHJlZml4Q2xzICsgJy1pdGVtJztcbmV4cG9ydCBjb25zdCBzZWxlY3RlZENscyA9IHByZWZpeENscyArICctc2VsZWN0ZWQnO1xuZXhwb3J0IGNvbnN0IGV4cGFuZENscyA9IHByZWZpeENscyArICctZXhwYW5kLWljb24nO1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRDbHMgPSBwcmVmaXhDbHMgKyAnLWNvbnRlbnQnO1xuZXhwb3J0IGNvbnN0IGluZGVudENscyA9IHByZWZpeENscyArICctaW5kZW50JztcbmV4cG9ydCBjb25zdCBvdXRlckluZGVudENscyA9IHByZWZpeENscyArICctaW5kZW50LW91dGVyJztcbmV4cG9ydCBjb25zdCBpbm5lckluZGVudENscyA9IHByZWZpeENscyArICctaW5kZW50LWlubmVyJztcbmV4cG9ydCBjb25zdCB3cmFwQ2xzID0gcHJlZml4Q2xzICsgJy13cmFwJztcbmV4cG9ydCBjb25zdCBsYXRlc3RDbHMgPSBwcmVmaXhDbHMgKyAnLWxhdGVzdCc7XG5leHBvcnQgY29uc3QgZXhwYW5kZWRDbHMgPSBwcmVmaXhDbHMgKyAnLWV4cGFuZGVkJztcbmV4cG9ydCBjb25zdCBleHBhbmRQbGFjZWhvbGRlckNscyA9IHByZWZpeENscyArICctZXhwYW5kLXBoJztcbmV4cG9ydCBjb25zdCBsb2FkaW5nSWNvbkNscyA9IHByZWZpeENscyArICctbG9hZGluZy1pY29uJztcblxuZXhwb3J0IGNvbnN0IFNUcmVlID0gc1dyYXA8eyBkaXNhYmxlZDogYm9vbGVhbiB9LCBIVE1MRGl2RWxlbWVudD4oe30pKFxuICAgIHN0eWxlZC5kaXYocHJvcHMgPT4ge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICB0aGVtZTogeyBkZXNpZ25Ub2tlbnM6IERUIH1cbiAgICAgICAgfSA9IHByb3BzO1xuICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgYmFja2dyb3VuZDogJHtEVC5UX0NPTE9SX0JHX1RSQU5TUEFSRU5UfTtcbiAgICAgICAgICAgIGNvbG9yOiAke0RULlRfQ09MT1JfVEVYVF9ERUZBVUxUX0RBUkt9O1xuXG4gICAgICAgICAgICAuJHtpdGVtQ2xzfSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHtEVC5UX0NPTE9SX1RFWFRfREVGQVVMVF9EQVJLfTtcbiAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiAzNnB4O1xuXG4gICAgICAgICAgICAgICAgLiR7aW5kZW50Q2xzfSB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAzMnB4O1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgICAgIGZsZXgtc2hyaW5rOiAwO1xuICAgICAgICAgICAgICAgICAgICAmLiR7aW5uZXJJbmRlbnRDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIDo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcgJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDFweDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICR7RFQuVF9DT0xPUl9MSU5FX0RFRkFVTFRfTElHSFR9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA1MCU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAmLiR7bGF0ZXN0Q2xzfSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOjphZnRlciB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogNTAlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHtEVC5UX0NPTE9SX0xJTkVfREVGQVVMVF9MSUdIVH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC4ke3dyYXBDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgZmxleDogMTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMCA4cHg7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIDpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAke0RULlRfQ09MT1JfQkdfREVGQVVMVF9IT1ZFUn07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLiR7Y29udGVudENsc30ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDhweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICYuJHtkaXNhYmxlZENsc30ge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHtEVC5UX0NPTE9SX1RFWFRfRElTQUJMRUR9O1xuICAgICAgICAgICAgICAgICAgICAuJHt3cmFwQ2xzfSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICYuJHtzaW5nbGVDbHN9IC4ke2l0ZW1DbHN9LiR7c2VsZWN0ZWRDbHN9IHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHtEVC5UX0NPTE9SX1RFWFRfUFJJTUFSWV9ERUZBVUxUfTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLiR7ZXhwYW5kUGxhY2Vob2xkZXJDbHN9LCAuJHtleHBhbmRDbHN9LCAuJHtsb2FkaW5nSWNvbkNsc30ge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICB3aWR0aDogMTZweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDE2cHg7XG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICAgICAgICAgICAgICAgZmxleC1zaHJpbms6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuJHtsb2FkaW5nSWNvbkNsc30ge1xuICAgICAgICAgICAgICAgIGZpbGw6ICR7RFQuVF9DT0xPUl9URVhUX1BSSU1BUllfREVGQVVMVH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuJHtleHBhbmRDbHN9IHtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgICAgICAgICAgIDpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAnICc7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiA1cHggMCA1cHggNnB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICR7RFQuVF9DT0xPUl9URVhUX0RFRkFVTFRfTElHSFR9O1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogM3B4O1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiA1cHg7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgJi4ke2Rpc2FibGVkQ2xzfSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR7RFQuVF9DT0xPUl9URVhUX0RJU0FCTEVEfTtcbiAgICAgICAgICAgICAgICAgICAgOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICR7RFQuVF9DT0xPUl9URVhUX0RJU0FCTEVEfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAmLiR7ZXhwYW5kZWRDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */"));
}.bind(void 0), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1RyZWUvc3R5bGUvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUJJIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1RyZWUvc3R5bGUvaW5kZXgudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcblxuaW1wb3J0IGNvbmZpZyBmcm9tICdzcmMvY29uZmlnJztcbmltcG9ydCB7IHNXcmFwIH0gZnJvbSAnc3JjL3N0eWxlJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmV4cG9ydCBjb25zdCBwcmVmaXhDbHMgPSBfcHJlZml4Q2xzICsgJy10cmVlJztcbmV4cG9ydCBjb25zdCBzaW5nbGVDbHMgPSBwcmVmaXhDbHMgKyAnLXNpbmdsZSc7XG5leHBvcnQgY29uc3QgbXVsdGlwbGVDbHMgPSBwcmVmaXhDbHMgKyAnLW11bHRpcGxlJztcbmV4cG9ydCBjb25zdCBkaXNhYmxlZENscyA9IHByZWZpeENscyArICctZGlzYWJsZWQnO1xuZXhwb3J0IGNvbnN0IGl0ZW1DbHMgPSBwcmVmaXhDbHMgKyAnLWl0ZW0nO1xuZXhwb3J0IGNvbnN0IHNlbGVjdGVkQ2xzID0gcHJlZml4Q2xzICsgJy1zZWxlY3RlZCc7XG5leHBvcnQgY29uc3QgZXhwYW5kQ2xzID0gcHJlZml4Q2xzICsgJy1leHBhbmQtaWNvbic7XG5leHBvcnQgY29uc3QgY29udGVudENscyA9IHByZWZpeENscyArICctY29udGVudCc7XG5leHBvcnQgY29uc3QgaW5kZW50Q2xzID0gcHJlZml4Q2xzICsgJy1pbmRlbnQnO1xuZXhwb3J0IGNvbnN0IG91dGVySW5kZW50Q2xzID0gcHJlZml4Q2xzICsgJy1pbmRlbnQtb3V0ZXInO1xuZXhwb3J0IGNvbnN0IGlubmVySW5kZW50Q2xzID0gcHJlZml4Q2xzICsgJy1pbmRlbnQtaW5uZXInO1xuZXhwb3J0IGNvbnN0IHdyYXBDbHMgPSBwcmVmaXhDbHMgKyAnLXdyYXAnO1xuZXhwb3J0IGNvbnN0IGxhdGVzdENscyA9IHByZWZpeENscyArICctbGF0ZXN0JztcbmV4cG9ydCBjb25zdCBleHBhbmRlZENscyA9IHByZWZpeENscyArICctZXhwYW5kZWQnO1xuZXhwb3J0IGNvbnN0IGV4cGFuZFBsYWNlaG9sZGVyQ2xzID0gcHJlZml4Q2xzICsgJy1leHBhbmQtcGgnO1xuZXhwb3J0IGNvbnN0IGxvYWRpbmdJY29uQ2xzID0gcHJlZml4Q2xzICsgJy1sb2FkaW5nLWljb24nO1xuXG5leHBvcnQgY29uc3QgU1RyZWUgPSBzV3JhcDx7IGRpc2FibGVkOiBib29sZWFuIH0sIEhUTUxEaXZFbGVtZW50Pih7fSkoXG4gICAgc3R5bGVkLmRpdihwcm9wcyA9PiB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIHRoZW1lOiB7IGRlc2lnblRva2VuczogRFQgfVxuICAgICAgICB9ID0gcHJvcHM7XG4gICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAke0RULlRfQ09MT1JfQkdfVFJBTlNQQVJFTlR9O1xuICAgICAgICAgICAgY29sb3I6ICR7RFQuVF9DT0xPUl9URVhUX0RFRkFVTFRfREFSS307XG5cbiAgICAgICAgICAgIC4ke2l0ZW1DbHN9IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGNvbG9yOiAke0RULlRfQ09MT1JfVEVYVF9ERUZBVUxUX0RBUkt9O1xuICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDM2cHg7XG5cbiAgICAgICAgICAgICAgICAuJHtpbmRlbnRDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDMycHg7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICAgICAgZmxleC1zaHJpbms6IDA7XG4gICAgICAgICAgICAgICAgICAgICYuJHtpbm5lckluZGVudENsc30ge1xuICAgICAgICAgICAgICAgICAgICAgICAgOjphZnRlciB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyAnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMXB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJHtEVC5UX0NPTE9SX0xJTkVfREVGQVVMVF9MSUdIVH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDUwJTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICYuJHtsYXRlc3RDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6OmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA1MCU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA0cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAke0RULlRfQ09MT1JfTElORV9ERUZBVUxUX0xJR0hUfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLiR7d3JhcENsc30ge1xuICAgICAgICAgICAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwIDhweDtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7RFQuVF9DT0xPUl9CR19ERUZBVUxUX0hPVkVSfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAuJHtjb250ZW50Q2xzfSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogOHB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgJi4ke2Rpc2FibGVkQ2xzfSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAke0RULlRfQ09MT1JfVEVYVF9ESVNBQkxFRH07XG4gICAgICAgICAgICAgICAgICAgIC4ke3dyYXBDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJi4ke3NpbmdsZUNsc30gLiR7aXRlbUNsc30uJHtzZWxlY3RlZENsc30ge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAke0RULlRfQ09MT1JfVEVYVF9QUklNQVJZX0RFRkFVTFR9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAuJHtleHBhbmRQbGFjZWhvbGRlckNsc30sIC4ke2V4cGFuZENsc30sIC4ke2xvYWRpbmdJY29uQ2xzfSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxNnB4O1xuICAgICAgICAgICAgICAgIGhlaWdodDogMTZweDtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgICAgICAgICAgICAgICBmbGV4LXNocmluazogMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC4ke2xvYWRpbmdJY29uQ2xzfSB7XG4gICAgICAgICAgICAgICAgZmlsbDogJHtEVC5UX0NPTE9SX1RFWFRfUFJJTUFSWV9ERUZBVUxUfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC4ke2V4cGFuZENsc30ge1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnM7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAgICAgICAgICAgOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcgJztcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDVweCAwIDVweCA2cHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJHtEVC5UX0NPTE9SX1RFWFRfREVGQVVMVF9MSUdIVH07XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAzcHg7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IDVweDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAmLiR7ZGlzYWJsZWRDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHtEVC5UX0NPTE9SX1RFWFRfRElTQUJMRUR9O1xuICAgICAgICAgICAgICAgICAgICA6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJHtEVC5UX0NPTE9SX1RFWFRfRElTQUJMRUR9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICYuJHtleHBhbmRlZENsc30ge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBgO1xuICAgIH0pXG4pO1xuIl19 */"));
exports.STree = STree;