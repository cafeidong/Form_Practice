/// <reference types="react" />
export declare const prefixCls: string;
export declare const tooltipPopupClassName: string;
export declare const contentCls: string;
export declare const ContentWrap: import("react").ForwardRefExoticComponent<{
    themeType: 'light' | 'dark';
    customStyle?: {
        popupWrapperPadding?: string | undefined;
    } | undefined;
} & import("react").HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & import("react").RefAttributes<HTMLElement>>;
export declare const Arrow: import("@emotion/styled-base").StyledComponent<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, Pick<import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement>, keyof import("react").HTMLAttributes<HTMLSpanElement>>, object>;
export declare const ArrowInner: import("@emotion/styled-base").StyledComponent<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, Pick<import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement>, keyof import("react").HTMLAttributes<HTMLSpanElement>>, object>;
export declare const TooltipWrap: import("react").ForwardRefExoticComponent<{
    themeType: 'light' | 'dark';
} & import("react").HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & import("react").RefAttributes<HTMLElement>>;
