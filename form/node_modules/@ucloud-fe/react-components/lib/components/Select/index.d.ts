/// <reference types="react" />
declare const ExportSelect: import("react").NamedExoticComponent<import("./Select").SelectProps & Omit<import("react").HTMLAttributes<HTMLDivElement>, keyof import("./Select").SelectProps>> & {
    readonly type: ({ size, status: _status, value: _value, defaultValue, onChange: _onChange, onVisibleChange, disabled, search, multiple, renderContent, renderSelector, placeholder, locale: _locale, options, children, emptyContent, showSelectAll, extra, clearable, customStyle, popover, popoverProps, renderPopup, virtualList, block, styleType, tagListCustomStyle, ...htmlProps }: import("./Select").SelectProps & Omit<import("react").HTMLAttributes<HTMLDivElement>, keyof import("./Select").SelectProps>) => JSX.Element;
} & {
    Option: {
        ({ value, children, ...rest }: import("./Option").OptionProps): JSX.Element;
        isMenuItem: boolean;
    };
    Group: {
        ({ groupKey, ...rest }: import("./Group").GroupProps): JSX.Element;
        isMenuSubMenu: boolean;
    };
    Extra: {
        ({ autoHidePopup, children, onClick, ...rest }: {
            autoHidePopup?: boolean | undefined;
        } & import("react").HTMLAttributes<HTMLDivElement>): JSX.Element;
        isMenuItem: boolean;
    };
    Size: ["sm", "md", "lg"];
};
export default ExportSelect;
