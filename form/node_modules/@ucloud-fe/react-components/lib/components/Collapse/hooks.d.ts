import { Key } from '../../hooks/group';
export interface CollapseProps {
    /** 激活的面板，multiple 时为数组值，controlled */
    openKeys?: Key[];
    /** 默认激活的面板，multiple 时为数组值，uncontrolled */
    defaultOpenKeys?: Key[];
    /** 变化回调 */
    onChange?: (keys: Key[]) => void;
    /** 是否可以多个同时打开 */
    multiple?: boolean;
}
export declare const useCollapse: ({ openKeys: _openKeys, defaultOpenKeys, onChange: _onChange, multiple }: CollapseProps) => import("../../hooks/group").GroupContext[];
export interface PanelProps {
    /** 是否展开，controlled */
    open?: boolean;
    /** 默认展开状态，uncontrolled */
    defaultOpen?: boolean;
    /** 修改回调 */
    onChange?: (open: boolean) => void;
    /** 是否禁用 */
    disabled?: boolean;
    /** 唯一键值 */
    panelKey?: Key;
    /** 是否强制渲染 */
    forceRender?: boolean;
    /** 关闭时子组件不会更新 */
    ignoreUpdateWhenClose?: boolean;
}
export declare const usePanel: ({ open: _open, defaultOpen, onChange: _onChange, disabled, panelKey, forceRender, ignoreUpdateWhenClose }: PanelProps) => [boolean, boolean, () => void];
