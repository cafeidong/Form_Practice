import React, { HTMLAttributes, ReactNode } from 'react';
import { Key } from '../../hooks/group';
import { Override } from '../../type';
export interface PanelProps {
    /** 标题项，为函数时会传入面板当前 open 和 disabled 状态，和 toggle 函数 */
    title?: ReactNode | ((options: {
        open: boolean;
        disabled?: boolean;
        toggle: () => void;
    }) => ReactNode);
    /** 修改回调 */
    onChange?: (open: boolean) => void;
    /** 是否展开，controlled */
    open?: boolean;
    /** 默认展开状态，uncontrolled */
    defaultOpen?: boolean;
    /** 是否强制渲染 */
    forceRender?: boolean;
    /** 关闭时子组件不会更新 */
    ignoreUpdateWhenClose?: boolean;
    /** 是否禁用 */
    disabled?: boolean;
    /** 唯一键值 */
    panelKey?: Key;
    /** title的位置 */
    titlePosition?: 'top' | 'bottom';
}
declare const MemoPanel: React.MemoExoticComponent<({ open: _open, defaultOpen, onChange, disabled, panelKey, titlePosition, title, ignoreUpdateWhenClose, forceRender, children, ...rest }: PanelProps & Override<HTMLAttributes<HTMLDivElement>, PanelProps>) => JSX.Element>;
export default MemoPanel;
