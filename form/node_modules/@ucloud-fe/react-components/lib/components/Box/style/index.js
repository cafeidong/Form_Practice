"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BoxWrap = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _newArrowCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/newArrowCheck"));

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _core = require("@emotion/core");

var _config = _interopRequireDefault(require("../../../config"));

var _withProps = _interopRequireDefault(require("../../../utils/withProps"));

var _this = void 0;

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

var _prefixCls = _config.default.prefixCls;
var prefixCls = _prefixCls + '-box';
var spacingMap = {
  xs: 4,
  sm: 8,
  md: 12,
  lg: 16,
  xlg: 20,
  xxlg: 24
};
var maxColumns = 12;

var percentage = function percentage(v) {
  (0, _newArrowCheck2.default)(this, _this);
  return +(v * 100).toFixed(8) + '%';
}.bind(void 0);

var _ref = process.env.NODE_ENV === "production" ? {
  name: "vea427-BoxWrap",
  styles: "display:flex;;label:BoxWrap;"
} : {
  name: "vea427-BoxWrap",
  styles: "display:flex;;label:BoxWrap;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1SG1CIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var BoxWrap = (0, _withProps.default)({
  className: prefixCls
})(( /*#__PURE__*/0, _styledBase.default)('div', {
  target: "ed55owx0",
  label: "BoxWrap"
})(function (props) {
  (0, _newArrowCheck2.default)(this, _this);
  var spacing = props.spacing,
      direction = props.direction,
      wrap = props.wrap,
      justifyContent = props.justifyContent,
      alignItems = props.alignItems,
      alignContent = props.alignContent,
      span = props.span,
      flex = props.flex,
      order = props.order,
      container = props.container,
      width = props.width,
      height = props.height,
      padding = props.padding;
  var isVertical = direction === 'column' || direction === 'column-reverse';
  var margin = [],
      boxMargin = [],
      cleanMargin = [];
  var hSpace = null,
      vSpace = null;

  if (Array.isArray(spacing)) {
    var _spacing = (0, _slicedToArray2.default)(spacing, 2);

    hSpace = _spacing[0];
    vSpace = _spacing[1];
  } else if (spacing != null) {
    if (isVertical) {
      vSpace = spacing;
    } else {
      hSpace = spacing;
    }
  }

  hSpace = spacingMap[hSpace] || hSpace;

  if (hSpace != null) {
    hSpace = hSpace / 2;
    margin.push( /*#__PURE__*/(0, _core.css)("margin-right:", hSpace, "px;margin-left:", hSpace, "px;;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RDJCIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")));
    boxMargin.push( /*#__PURE__*/(0, _core.css)("padding-right:", hSpace, "px;padding-left:", hSpace, "px;margin-right:0;margin-left:0;;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrRThCIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")));
    cleanMargin.push( /*#__PURE__*/(0, _core.css)("margin-right:-", hSpace, "px;margin-left:-", hSpace, "px;;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RWdDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")));
  }

  vSpace = spacingMap[vSpace] || vSpace;

  if (vSpace != null) {
    margin.push( /*#__PURE__*/(0, _core.css)("margin-bottom:", vSpace, "px;;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErRTJCIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")));
    boxMargin.push( /*#__PURE__*/(0, _core.css)("padding-bottom:", vSpace, "px;margin-bottom:0;;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrRjhCIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")));
    cleanMargin.push( /*#__PURE__*/(0, _core.css)("margin-bottom:-", vSpace, "px;;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRmdDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")));
  }

  var boxPadding = [];

  if (padding) {
    if (typeof padding === 'string' || typeof padding === 'number') {
      boxPadding.push( /*#__PURE__*/(0, _core.css)("padding:", spacingMap[padding] ? spacingMap[padding] + 'px' : padding, ";;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2Rm1DIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")));
    } else if (Array.isArray(padding)) {
      var _padding = (0, _slicedToArray2.default)(padding, 2),
          hP = _padding[0],
          vP = _padding[1];

      vP = spacingMap[vP] ? spacingMap[vP] + 'px' : vP;

      if (vP) {
        boxPadding.push( /*#__PURE__*/(0, _core.css)("padding-top:", vP, ";padding-bottom:", vP, ";;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvR3VDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")));
      }

      hP = spacingMap[hP] ? spacingMap[hP] + 'px' : hP;

      if (hP) {
        boxPadding.push( /*#__PURE__*/(0, _core.css)("padding-left:", hP, ";padding-right:", hP, ";;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyR3VDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")));
      }
    }
  }

  return /*#__PURE__*/(0, _core.css)("box-sizing:border-box;", container && _ref, " ", span != null && /*#__PURE__*/(0, _core.css)("width:", percentage(span / maxColumns), ";;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2SG1CIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")), " ", flex != null && /*#__PURE__*/(0, _core.css)("flex:", flex, ";;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtSW1CIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")), " ", order != null && /*#__PURE__*/(0, _core.css)("order:", order, ";;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5SW1CIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")), " ", wrap != null && /*#__PURE__*/(0, _core.css)("flex-wrap:", wrap, ";;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErSW1CIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")), " ", direction != null && /*#__PURE__*/(0, _core.css)("flex-direction:", direction, ";;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxSm1CIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")), " ", justifyContent != null && /*#__PURE__*/(0, _core.css)("justify-content:", justifyContent, ";;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEySm1CIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")), " ", alignItems != null && /*#__PURE__*/(0, _core.css)("align-items:", alignItems, ";;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpS21CIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")), " ", alignContent != null && /*#__PURE__*/(0, _core.css)("align-content:", alignContent, ";;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1S21CIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")), " ", width && /*#__PURE__*/(0, _core.css)("width:", width, ";;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2S21CIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")), " ", height && /*#__PURE__*/(0, _core.css)("height:", height, ";;label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtTG1CIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */")), " ", boxPadding, ";", cleanMargin, ";&&&>*{", margin, ";&.", prefixCls, "{", boxMargin, ";}};label:BoxWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrSGtCIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHdpdGhQcm9wcyBmcm9tICdzcmMvdXRpbHMvd2l0aFByb3BzJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJveCc7XG5cbmNvbnN0IHNwYWNpbmdNYXAgPSB7XG4gICAgeHM6IDQsXG4gICAgc206IDgsXG4gICAgbWQ6IDEyLFxuICAgIGxnOiAxNixcbiAgICB4bGc6IDIwLFxuICAgIHh4bGc6IDI0XG59O1xuXG5jb25zdCBtYXhDb2x1bW5zID0gMTI7XG5cbmNvbnN0IHBlcmNlbnRhZ2UgPSB2ID0+IHtcbiAgICByZXR1cm4gKyh2ICogMTAwKS50b0ZpeGVkKDgpICsgJyUnO1xufTtcblxuZXhwb3J0IGNvbnN0IEJveFdyYXAgPSB3aXRoUHJvcHMoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShcbiAgICBzdHlsZWQoJ2RpdicpKHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BhY2luZyxcbiAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgIHdyYXAsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudCxcbiAgICAgICAgICAgIGFsaWduSXRlbXMsXG4gICAgICAgICAgICBhbGlnbkNvbnRlbnQsXG4gICAgICAgICAgICBzcGFuLFxuICAgICAgICAgICAgZmxleCxcbiAgICAgICAgICAgIG9yZGVyLFxuICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICBwYWRkaW5nXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgaXNWZXJ0aWNhbCA9IGRpcmVjdGlvbiA9PT0gJ2NvbHVtbicgfHwgZGlyZWN0aW9uID09PSAnY29sdW1uLXJldmVyc2UnO1xuXG4gICAgICAgIGNvbnN0IG1hcmdpbiA9IFtdLFxuICAgICAgICAgICAgYm94TWFyZ2luID0gW10sXG4gICAgICAgICAgICBjbGVhbk1hcmdpbiA9IFtdO1xuICAgICAgICBsZXQgaFNwYWNlID0gbnVsbCxcbiAgICAgICAgICAgIHZTcGFjZSA9IG51bGw7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNwYWNpbmcpKSB7XG4gICAgICAgICAgICBbaFNwYWNlLCB2U3BhY2VdID0gc3BhY2luZztcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjaW5nICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChpc1ZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgdlNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaFNwYWNlID0gc3BhY2luZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBoU3BhY2UgPSBzcGFjaW5nTWFwW2hTcGFjZV0gfHwgaFNwYWNlO1xuICAgICAgICBpZiAoaFNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhTcGFjZSA9IGhTcGFjZSAvIDI7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIHZTcGFjZSA9IHNwYWNpbmdNYXBbdlNwYWNlXSB8fCB2U3BhY2U7XG4gICAgICAgIGlmICh2U3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBib3hNYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0ke3ZTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJveFBhZGRpbmcgPSBbXTtcbiAgICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFkZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHBhZGRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgYm94UGFkZGluZy5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJHtzcGFjaW5nTWFwW3BhZGRpbmddID8gc3BhY2luZ01hcFtwYWRkaW5nXSArICdweCcgOiBwYWRkaW5nfTtcbiAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYWRkaW5nKSkge1xuICAgICAgICAgICAgICAgIGxldCBbaFAsIHZQXSA9IHBhZGRpbmc7XG4gICAgICAgICAgICAgICAgdlAgPSBzcGFjaW5nTWFwW3ZQXSA/IHNwYWNpbmdNYXBbdlBdICsgJ3B4JyA6IHZQO1xuICAgICAgICAgICAgICAgIGlmICh2UCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICR7dlB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaFAgPSBzcGFjaW5nTWFwW2hQXSA/IHNwYWNpbmdNYXBbaFBdICsgJ3B4JyA6IGhQO1xuICAgICAgICAgICAgICAgIGlmIChoUCkge1xuICAgICAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAke2hQfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICBgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgc3BhbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwZXJjZW50YWdlKHNwYW4gLyBtYXhDb2x1bW5zKX07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBmbGV4ICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXg6ICR7ZmxleH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBvcmRlciAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogJHtvcmRlcn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3cmFwICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogJHt3cmFwfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogJHtkaXJlY3Rpb259O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiAke2p1c3RpZnlDb250ZW50fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduSXRlbXMgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6ICR7YWxpZ25JdGVtc307XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogJHthbGlnbkNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgd2lkdGggJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtib3hQYWRkaW5nfTtcbiAgICAgICAgICAgICR7Y2xlYW5NYXJnaW59O1xuXG4gICAgICAgICAgICAmJiY+KiB7XG4gICAgICAgICAgICAgICAgJHttYXJnaW59O1xuICAgICAgICAgICAgICAgICYuJHtwcmVmaXhDbHN9IHtcbiAgICAgICAgICAgICAgICAgICAgJHtib3hNYXJnaW59O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */"));
}.bind(void 0), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JveC9zdHlsZS9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyQkkiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQm94L3N0eWxlL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5cbmltcG9ydCBjb25maWcgZnJvbSAnc3JjL2NvbmZpZyc7XG5pbXBvcnQgd2l0aFByb3BzIGZyb20gJ3NyYy91dGlscy93aXRoUHJvcHMnO1xuXG5jb25zdCB7IHByZWZpeENsczogX3ByZWZpeENscyB9ID0gY29uZmlnO1xuY29uc3QgcHJlZml4Q2xzID0gX3ByZWZpeENscyArICctYm94JztcblxuY29uc3Qgc3BhY2luZ01hcCA9IHtcbiAgICB4czogNCxcbiAgICBzbTogOCxcbiAgICBtZDogMTIsXG4gICAgbGc6IDE2LFxuICAgIHhsZzogMjAsXG4gICAgeHhsZzogMjRcbn07XG5cbmNvbnN0IG1heENvbHVtbnMgPSAxMjtcblxuY29uc3QgcGVyY2VudGFnZSA9IHYgPT4ge1xuICAgIHJldHVybiArKHYgKiAxMDApLnRvRml4ZWQoOCkgKyAnJSc7XG59O1xuXG5leHBvcnQgY29uc3QgQm94V3JhcCA9IHdpdGhQcm9wcyh7XG4gICAgY2xhc3NOYW1lOiBwcmVmaXhDbHNcbn0pKFxuICAgIHN0eWxlZCgnZGl2JykocHJvcHMgPT4ge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBzcGFjaW5nLFxuICAgICAgICAgICAgZGlyZWN0aW9uLFxuICAgICAgICAgICAgd3JhcCxcbiAgICAgICAgICAgIGp1c3RpZnlDb250ZW50LFxuICAgICAgICAgICAgYWxpZ25JdGVtcyxcbiAgICAgICAgICAgIGFsaWduQ29udGVudCxcbiAgICAgICAgICAgIHNwYW4sXG4gICAgICAgICAgICBmbGV4LFxuICAgICAgICAgICAgb3JkZXIsXG4gICAgICAgICAgICBjb250YWluZXIsXG4gICAgICAgICAgICB3aWR0aCxcbiAgICAgICAgICAgIGhlaWdodCxcbiAgICAgICAgICAgIHBhZGRpbmdcbiAgICAgICAgfSA9IHByb3BzO1xuICAgICAgICBjb25zdCBpc1ZlcnRpY2FsID0gZGlyZWN0aW9uID09PSAnY29sdW1uJyB8fCBkaXJlY3Rpb24gPT09ICdjb2x1bW4tcmV2ZXJzZSc7XG5cbiAgICAgICAgY29uc3QgbWFyZ2luID0gW10sXG4gICAgICAgICAgICBib3hNYXJnaW4gPSBbXSxcbiAgICAgICAgICAgIGNsZWFuTWFyZ2luID0gW107XG4gICAgICAgIGxldCBoU3BhY2UgPSBudWxsLFxuICAgICAgICAgICAgdlNwYWNlID0gbnVsbDtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoc3BhY2luZykpIHtcbiAgICAgICAgICAgIFtoU3BhY2UsIHZTcGFjZV0gPSBzcGFjaW5nO1xuICAgICAgICB9IGVsc2UgaWYgKHNwYWNpbmcgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKGlzVmVydGljYWwpIHtcbiAgICAgICAgICAgICAgICB2U3BhY2UgPSBzcGFjaW5nO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBoU3BhY2UgPSBzcGFjaW5nO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGhTcGFjZSA9IHNwYWNpbmdNYXBbaFNwYWNlXSB8fCBoU3BhY2U7XG4gICAgICAgIGlmIChoU3BhY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgaFNwYWNlID0gaFNwYWNlIC8gMjtcbiAgICAgICAgICAgIG1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAke2hTcGFjZX1weDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgYm94TWFyZ2luLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogJHtoU3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgICAgICAgICAgYCk7XG4gICAgICAgICAgICBjbGVhbk1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IC0ke2hTcGFjZX1weDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogLSR7aFNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgIH1cbiAgICAgICAgdlNwYWNlID0gc3BhY2luZ01hcFt2U3BhY2VdIHx8IHZTcGFjZTtcbiAgICAgICAgaWYgKHZTcGFjZSAhPSBudWxsKSB7XG4gICAgICAgICAgICBtYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogJHt2U3BhY2V9cHg7XG4gICAgICAgICAgICBgKTtcbiAgICAgICAgICAgIGJveE1hcmdpbi5wdXNoKGNzc2BcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogJHt2U3BhY2V9cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgY2xlYW5NYXJnaW4ucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogLSR7dlNwYWNlfXB4O1xuICAgICAgICAgICAgYCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYm94UGFkZGluZyA9IFtdO1xuICAgICAgICBpZiAocGFkZGluZykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBwYWRkaW5nID09PSAnc3RyaW5nJyB8fCB0eXBlb2YgcGFkZGluZyA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICBib3hQYWRkaW5nLnB1c2goY3NzYFxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAke3NwYWNpbmdNYXBbcGFkZGluZ10gPyBzcGFjaW5nTWFwW3BhZGRpbmddICsgJ3B4JyA6IHBhZGRpbmd9O1xuICAgICAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHBhZGRpbmcpKSB7XG4gICAgICAgICAgICAgICAgbGV0IFtoUCwgdlBdID0gcGFkZGluZztcbiAgICAgICAgICAgICAgICB2UCA9IHNwYWNpbmdNYXBbdlBdID8gc3BhY2luZ01hcFt2UF0gKyAncHgnIDogdlA7XG4gICAgICAgICAgICAgICAgaWYgKHZQKSB7XG4gICAgICAgICAgICAgICAgICAgIGJveFBhZGRpbmcucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogJHt2UH07XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogJHt2UH07XG4gICAgICAgICAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBoUCA9IHNwYWNpbmdNYXBbaFBdID8gc3BhY2luZ01hcFtoUF0gKyAncHgnIDogaFA7XG4gICAgICAgICAgICAgICAgaWYgKGhQKSB7XG4gICAgICAgICAgICAgICAgICAgIGJveFBhZGRpbmcucHVzaChjc3NgXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7aFB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogJHtoUH07XG4gICAgICAgICAgICAgICAgICAgIGApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcblxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBjb250YWluZXIgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBzcGFuICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3BlcmNlbnRhZ2Uoc3BhbiAvIG1heENvbHVtbnMpfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGZsZXggIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgZmxleDogJHtmbGV4fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIG9yZGVyICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIG9yZGVyOiAke29yZGVyfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIHdyYXAgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgZmxleC13cmFwOiAke3dyYXB9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgZGlyZWN0aW9uICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiAke2RpcmVjdGlvbn07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5Q29udGVudCAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6ICR7anVzdGlmeUNvbnRlbnR9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgYWxpZ25JdGVtcyAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogJHthbGlnbkl0ZW1zfTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgIGFsaWduQ29udGVudCAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBhbGlnbi1jb250ZW50OiAke2FsaWduQ29udGVudH07XG4gICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHtcbiAgICAgICAgICAgICAgICB3aWR0aCAmJlxuICAgICAgICAgICAgICAgIGNzc2BcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICR7d2lkdGh9O1xuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgaGVpZ2h0ICYmXG4gICAgICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICR7aGVpZ2h0fTtcbiAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAke2JveFBhZGRpbmd9O1xuICAgICAgICAgICAgJHtjbGVhbk1hcmdpbn07XG5cbiAgICAgICAgICAgICYmJj4qIHtcbiAgICAgICAgICAgICAgICAke21hcmdpbn07XG4gICAgICAgICAgICAgICAgJi4ke3ByZWZpeENsc30ge1xuICAgICAgICAgICAgICAgICAgICAke2JveE1hcmdpbn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBgO1xuICAgIH0pXG4pO1xuIl19 */"));
exports.BoxWrap = BoxWrap;