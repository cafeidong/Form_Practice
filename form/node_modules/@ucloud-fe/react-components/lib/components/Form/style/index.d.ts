import React from 'react';
export declare const tipIconCls: string;
export declare const tipContentCls: string;
export declare const GridItemWrap: import("@emotion/styled-base").StyledComponent<React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>, Pick<React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>, "theme" | keyof React.HTMLAttributes<HTMLElement>>, object>;
export declare const GridLabelWrap: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>>;
export declare const GridControllerWrap: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>>;
export declare const ItemWrap: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>>;
export declare const LabelWrap: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>>;
export declare const CommentWrap: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>>;
export declare const ControllerWrap: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>>;
export declare const GroupWrap: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>>;
export declare const GroupTitle: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>>;
export declare const FormWrap: React.ForwardRefExoticComponent<{
    size: string;
} & React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>>;
export declare const Tip: React.ForwardRefExoticComponent<{
    status: string;
} & import("../../Combine/Combine").DefinedCombineProps & Omit<React.HTMLAttributes<HTMLDivElement>, keyof import("../../Combine/Combine").DefinedCombineProps> & React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>>;
export declare const RequiredLabel: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>>;
export declare const HelpIcon: React.ForwardRefExoticComponent<{
    type: string;
    size?: string | undefined;
} & React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>>;
declare const StatusIcon: React.MemoExoticComponent<({ status, ...rest }: {
    status: string;
    spin?: boolean | undefined;
}) => JSX.Element>;
export { StatusIcon };
export declare const SubAreaWrap: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & React.RefAttributes<HTMLElement>>;
