/// <reference types="react" />
import { DesignToken } from '../../../style';
export declare const prefixCls: string;
export declare const wrapCls: string;
export declare const badgeCls: string;
export declare const dotCls: string;
export declare const SWrap: import("react").ForwardRefExoticComponent<import("react").HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & import("react").RefAttributes<HTMLElement>>;
declare type SBadgeWrapProps = {
    zIndex?: number;
};
export declare const SBadgeWrap: import("react").ForwardRefExoticComponent<SBadgeWrapProps & import("react").HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & import("react").RefAttributes<HTMLElement>>;
interface StyleInfo {
    bg: DesignToken;
    color?: DesignToken;
}
export declare const StyleMap: {
    red: StyleInfo;
    green: StyleInfo;
    yellow: StyleInfo;
    primary: StyleInfo;
};
declare type SBadgeProps = {
    dot?: boolean;
    color?: keyof typeof StyleMap;
};
export declare const SBadge: import("react").ForwardRefExoticComponent<SBadgeProps & import("react").HTMLAttributes<HTMLSpanElement> & {
    theme?: import("../../../style").Theme | undefined;
} & import("react").RefAttributes<HTMLSpanElement>>;
interface BubbleStyleInfo {
    bg: DesignToken;
    color?: DesignToken;
}
export declare const bubbleStyleMap: {
    yellow: BubbleStyleInfo;
    orange: BubbleStyleInfo;
    gray: BubbleStyleInfo;
    purple: BubbleStyleInfo;
};
declare type SBubbleProps = {
    styleType: keyof typeof bubbleStyleMap;
    size: 'sm' | 'md';
    customStyle?: {
        bubbleColor?: string;
        bubbleBackground?: string;
    };
};
export declare const SBubbleWrap: import("react").ForwardRefExoticComponent<SBubbleProps & import("react").HTMLAttributes<HTMLElement> & {
    theme?: import("../../../style").Theme | undefined;
} & import("react").RefAttributes<HTMLElement>>;
export {};
