"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SBubbleWrap = exports.bubbleStyleMap = exports.SBadge = exports.StyleMap = exports.SBadgeWrap = exports.SWrap = exports.dotCls = exports.badgeCls = exports.wrapCls = exports.prefixCls = void 0;

var _newArrowCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/newArrowCheck"));

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _core = require("@emotion/core");

var _classnames = _interopRequireDefault(require("classnames"));

var _config = _interopRequireDefault(require("../../../config"));

var _style = require("../../../style");

var _this = void 0;

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

var _prefixCls = _config.default.prefixCls;
var prefixCls = _prefixCls + '-badge';
exports.prefixCls = prefixCls;
var wrapCls = prefixCls + '-badge-wrap';
exports.wrapCls = wrapCls;
var badgeCls = prefixCls + '-badge';
exports.badgeCls = badgeCls;
var dotCls = badgeCls + '-dot';
exports.dotCls = dotCls;
var SWrap = (0, _style.sWrap)({
  className: prefixCls
})(( /*#__PURE__*/0, _styledBase.default)('div', {
  target: "e1rahfzq0",
  label: "SWrap"
})(process.env.NODE_ENV === "production" ? {
  name: "1gomreu",
  styles: "position:relative;display:inline-block;"
} : {
  name: "1gomreu",
  styles: "position:relative;display:inline-block;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JhZGdlL3N0eWxlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWVnQiIsImZpbGUiOiIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9CYWRnZS9zdHlsZS9pbmRleC50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCBjb25maWcgZnJvbSAnc3JjL2NvbmZpZyc7XG5pbXBvcnQgeyBzV3JhcCwgRGVzaWduVG9rZW4gfSBmcm9tICdzcmMvc3R5bGUnO1xuXG5jb25zdCB7IHByZWZpeENsczogX3ByZWZpeENscyB9ID0gY29uZmlnO1xuZXhwb3J0IGNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJhZGdlJztcbmV4cG9ydCBjb25zdCB3cmFwQ2xzID0gcHJlZml4Q2xzICsgJy1iYWRnZS13cmFwJztcbmV4cG9ydCBjb25zdCBiYWRnZUNscyA9IHByZWZpeENscyArICctYmFkZ2UnO1xuZXhwb3J0IGNvbnN0IGRvdENscyA9IGJhZGdlQ2xzICsgJy1kb3QnO1xuXG5leHBvcnQgY29uc3QgU1dyYXAgPSBzV3JhcCh7XG4gICAgY2xhc3NOYW1lOiBwcmVmaXhDbHNcbn0pKHN0eWxlZCgnZGl2JylgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbmApO1xuXG50eXBlIFNCYWRnZVdyYXBQcm9wcyA9IHsgekluZGV4PzogbnVtYmVyIH07XG5cbmV4cG9ydCBjb25zdCBTQmFkZ2VXcmFwID0gc1dyYXA8U0JhZGdlV3JhcFByb3BzPih7XG4gICAgY2xhc3NOYW1lOiB3cmFwQ2xzXG59KShcbiAgICBzdHlsZWQuZGl2KHByb3BzID0+IHtcbiAgICAgICAgY29uc3QgeyB6SW5kZXggfSA9IHByb3BzO1xuICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgei1pbmRleDogJHt6SW5kZXh9O1xuICAgICAgICBgO1xuICAgIH0pXG4pO1xuXG5pbnRlcmZhY2UgU3R5bGVJbmZvIHtcbiAgICBiZzogRGVzaWduVG9rZW47XG4gICAgY29sb3I/OiBEZXNpZ25Ub2tlbjtcbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlTWFwID0ge1xuICAgIHJlZDoge1xuICAgICAgICBiZzogJ1RfQ09MT1JfTEVHRU5EX1JFRF82J1xuICAgIH0gYXMgU3R5bGVJbmZvLFxuICAgIGdyZWVuOiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9MRUdFTkRfR1JFRU5fNidcbiAgICB9IGFzIFN0eWxlSW5mbyxcbiAgICB5ZWxsb3c6IHtcbiAgICAgICAgYmc6ICdUX0NPTE9SX0xFR0VORF9ZRUxMT1dfNicsXG4gICAgICAgIGNvbG9yOiAnVF9DT0xPUl9URVhUX1NZU1RFTV9CTEFDSydcbiAgICB9IGFzIFN0eWxlSW5mbyxcbiAgICBwcmltYXJ5OiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9CR19QUklNQVJZXzEnXG4gICAgfSBhcyBTdHlsZUluZm9cbn07XG5cbnR5cGUgU0JhZGdlUHJvcHMgPSB7IGRvdD86IGJvb2xlYW47IGNvbG9yPzoga2V5b2YgdHlwZW9mIFN0eWxlTWFwIH07XG5cbmNvbnN0IGRlZmF1bHRDb2xvciA9ICdyZWQnO1xuY29uc3QgZGVmYXVsdENvbG9yQ1QgPSAnVF9DT0xPUl9URVhUX1NZU1RFTV9XSElURSc7XG5leHBvcnQgY29uc3QgU0JhZGdlID0gc1dyYXA8U0JhZGdlUHJvcHMsIEhUTUxTcGFuRWxlbWVudD4oe1xuICAgIGNsYXNzTmFtZTogKHsgZG90IH0pID0+IGNsYXNzbmFtZXMoYmFkZ2VDbHMsIGRvdCAmJiBkb3RDbHMpXG59KShcbiAgICBzdHlsZWQuc3Bhbihwcm9wcyA9PiB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIHRoZW1lOiB7IGRlc2lnblRva2VuczogRFQgfSxcbiAgICAgICAgICAgIGNvbG9yID0gZGVmYXVsdENvbG9yXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3Qgc3R5bGVNYXAgPSBTdHlsZU1hcFtjb2xvcl0gfHwgU3R5bGVNYXBbZGVmYXVsdENvbG9yXTtcbiAgICAgICAgY29uc3QgY29sb3JUID0gc3R5bGVNYXAuY29sb3IgfHwgZGVmYXVsdENvbG9yQ1Q7XG5cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICAgICAgICAgIG1pbi13aWR0aDogMTBweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgNXB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAke0RUW3N0eWxlTWFwLmJnXX07XG4gICAgICAgICAgICBjb2xvcjogJHtEVFtjb2xvclRdfTtcblxuICAgICAgICAgICAgJi4ke2RvdENsc30ge1xuICAgICAgICAgICAgICAgIHdpZHRoOiA4cHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA4cHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgbWluLXdpZHRoOiAwO1xuICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIGA7XG4gICAgfSlcbik7XG5cbmludGVyZmFjZSBCdWJibGVTdHlsZUluZm8ge1xuICAgIGJnOiBEZXNpZ25Ub2tlbjtcbiAgICBjb2xvcj86IERlc2lnblRva2VuO1xufVxuXG5leHBvcnQgY29uc3QgYnViYmxlU3R5bGVNYXAgPSB7XG4gICAgeWVsbG93OiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9CR19XQVJOSU5HX0RBUksnLFxuICAgICAgICBjb2xvcjogJ1RfQ09MT1JfTEVHRU5EX09SQU5HRV84J1xuICAgIH0gYXMgQnViYmxlU3R5bGVJbmZvLFxuICAgIG9yYW5nZToge1xuICAgICAgICBiZzogJ1RfQ09MT1JfTEVHRU5EX09SQU5HRV81J1xuICAgIH0gYXMgQnViYmxlU3R5bGVJbmZvLFxuICAgIGdyYXk6IHtcbiAgICAgICAgYmc6ICdUX0NPTE9SX0JHX0RJU0FCTEVEX0RBUksnXG4gICAgfSBhcyBCdWJibGVTdHlsZUluZm8sXG4gICAgcHVycGxlOiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9MRUdFTkRfUFVSUExFXzUnXG4gICAgfSBhcyBCdWJibGVTdHlsZUluZm9cbn07XG5cbnR5cGUgU0J1YmJsZVByb3BzID0ge1xuICAgIHN0eWxlVHlwZToga2V5b2YgdHlwZW9mIGJ1YmJsZVN0eWxlTWFwO1xuICAgIHNpemU6ICdzbScgfCAnbWQnO1xuICAgIGN1c3RvbVN0eWxlPzoge1xuICAgICAgICBidWJibGVDb2xvcj86IHN0cmluZztcbiAgICAgICAgYnViYmxlQmFja2dyb3VuZD86IHN0cmluZztcbiAgICB9O1xufTtcblxuY29uc3QgZGVmYXVsdEJDb2xvciA9ICdvcmFuZ2UnO1xuY29uc3QgZGVmYXVsdEJDb2xvclQgPSAnVF9DT0xPUl9URVhUX1NZU1RFTV9XSElURSc7XG5leHBvcnQgY29uc3QgU0J1YmJsZVdyYXAgPSBzV3JhcDxTQnViYmxlUHJvcHM+KHtcbiAgICBjbGFzc05hbWU6IHByZWZpeENscyArICctYnViYmxlLXdyYXAnXG59KShcbiAgICBzdHlsZWQuZGl2KHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgdGhlbWU6IHsgZGVzaWduVG9rZW5zOiBEVCB9LFxuICAgICAgICAgICAgc3R5bGVUeXBlID0gZGVmYXVsdEJDb2xvcixcbiAgICAgICAgICAgIHNpemUsXG4gICAgICAgICAgICBjdXN0b21TdHlsZSA9IHt9XG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgZm9udFNpemUgPSB7IHNtOiAnMTJweCcsIG1kOiAnMTRweCcgfVtzaXplXTtcbiAgICAgICAgY29uc3QgbGluZUhlaWdodCA9IHsgc206ICcxNnB4JywgbWQ6ICcyMHB4JyB9W3NpemVdO1xuXG4gICAgICAgIGNvbnN0IG1hcCA9IGJ1YmJsZVN0eWxlTWFwW3N0eWxlVHlwZV0gfHwgYnViYmxlU3R5bGVNYXBbZGVmYXVsdEJDb2xvcl07XG4gICAgICAgIGNvbnN0IGJnID0gY3VzdG9tU3R5bGUuYnViYmxlQmFja2dyb3VuZCB8fCBEVFttYXAuYmddO1xuICAgICAgICBjb25zdCBjb2xvclQgPSBtYXAuY29sb3IgfHwgZGVmYXVsdEJDb2xvclQ7XG4gICAgICAgIGNvbnN0IGNvbG9yID0gY3VzdG9tU3R5bGUuYnViYmxlQ29sb3IgfHwgRFRbY29sb3JUXTtcbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAke2xpbmVIZWlnaHR9O1xuICAgICAgICAgICAgcGFkZGluZzogMCA0cHg7XG4gICAgICAgICAgICBmb250LXNpemU6ICR7Zm9udFNpemV9O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAke2JnfTtcblxuICAgICAgICAgICAgOjphZnRlciB7XG4gICAgICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBsZWZ0OiA0cHg7XG4gICAgICAgICAgICAgICAgYm90dG9tOiAtNXB4O1xuICAgICAgICAgICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiA1cHggNXB4IDAgMDtcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICR7Ymd9IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICBgO1xuICAgIH0pXG4pO1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
}));
exports.SWrap = SWrap;
var SBadgeWrap = (0, _style.sWrap)({
  className: wrapCls
})((0, _styledBase.default)("div", {
  target: "e1rahfzq1",
  label: "SBadgeWrap"
})(function (props) {
  (0, _newArrowCheck2.default)(this, _this);
  var zIndex = props.zIndex;
  return /*#__PURE__*/(0, _core.css)("position:absolute;z-index:", zIndex, ";;label:SBadgeWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JhZGdlL3N0eWxlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJCa0IiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQmFkZ2Uvc3R5bGUvaW5kZXgudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHsgc1dyYXAsIERlc2lnblRva2VuIH0gZnJvbSAnc3JjL3N0eWxlJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmV4cG9ydCBjb25zdCBwcmVmaXhDbHMgPSBfcHJlZml4Q2xzICsgJy1iYWRnZSc7XG5leHBvcnQgY29uc3Qgd3JhcENscyA9IHByZWZpeENscyArICctYmFkZ2Utd3JhcCc7XG5leHBvcnQgY29uc3QgYmFkZ2VDbHMgPSBwcmVmaXhDbHMgKyAnLWJhZGdlJztcbmV4cG9ydCBjb25zdCBkb3RDbHMgPSBiYWRnZUNscyArICctZG90JztcblxuZXhwb3J0IGNvbnN0IFNXcmFwID0gc1dyYXAoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShzdHlsZWQoJ2RpdicpYFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5gKTtcblxudHlwZSBTQmFkZ2VXcmFwUHJvcHMgPSB7IHpJbmRleD86IG51bWJlciB9O1xuXG5leHBvcnQgY29uc3QgU0JhZGdlV3JhcCA9IHNXcmFwPFNCYWRnZVdyYXBQcm9wcz4oe1xuICAgIGNsYXNzTmFtZTogd3JhcENsc1xufSkoXG4gICAgc3R5bGVkLmRpdihwcm9wcyA9PiB7XG4gICAgICAgIGNvbnN0IHsgekluZGV4IH0gPSBwcm9wcztcbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHotaW5kZXg6ICR7ekluZGV4fTtcbiAgICAgICAgYDtcbiAgICB9KVxuKTtcblxuaW50ZXJmYWNlIFN0eWxlSW5mbyB7XG4gICAgYmc6IERlc2lnblRva2VuO1xuICAgIGNvbG9yPzogRGVzaWduVG9rZW47XG59XG5cbmV4cG9ydCBjb25zdCBTdHlsZU1hcCA9IHtcbiAgICByZWQ6IHtcbiAgICAgICAgYmc6ICdUX0NPTE9SX0xFR0VORF9SRURfNidcbiAgICB9IGFzIFN0eWxlSW5mbyxcbiAgICBncmVlbjoge1xuICAgICAgICBiZzogJ1RfQ09MT1JfTEVHRU5EX0dSRUVOXzYnXG4gICAgfSBhcyBTdHlsZUluZm8sXG4gICAgeWVsbG93OiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9MRUdFTkRfWUVMTE9XXzYnLFxuICAgICAgICBjb2xvcjogJ1RfQ09MT1JfVEVYVF9TWVNURU1fQkxBQ0snXG4gICAgfSBhcyBTdHlsZUluZm8sXG4gICAgcHJpbWFyeToge1xuICAgICAgICBiZzogJ1RfQ09MT1JfQkdfUFJJTUFSWV8xJ1xuICAgIH0gYXMgU3R5bGVJbmZvXG59O1xuXG50eXBlIFNCYWRnZVByb3BzID0geyBkb3Q/OiBib29sZWFuOyBjb2xvcj86IGtleW9mIHR5cGVvZiBTdHlsZU1hcCB9O1xuXG5jb25zdCBkZWZhdWx0Q29sb3IgPSAncmVkJztcbmNvbnN0IGRlZmF1bHRDb2xvckNUID0gJ1RfQ09MT1JfVEVYVF9TWVNURU1fV0hJVEUnO1xuZXhwb3J0IGNvbnN0IFNCYWRnZSA9IHNXcmFwPFNCYWRnZVByb3BzLCBIVE1MU3BhbkVsZW1lbnQ+KHtcbiAgICBjbGFzc05hbWU6ICh7IGRvdCB9KSA9PiBjbGFzc25hbWVzKGJhZGdlQ2xzLCBkb3QgJiYgZG90Q2xzKVxufSkoXG4gICAgc3R5bGVkLnNwYW4ocHJvcHMgPT4ge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICB0aGVtZTogeyBkZXNpZ25Ub2tlbnM6IERUIH0sXG4gICAgICAgICAgICBjb2xvciA9IGRlZmF1bHRDb2xvclxuICAgICAgICB9ID0gcHJvcHM7XG4gICAgICAgIGNvbnN0IHN0eWxlTWFwID0gU3R5bGVNYXBbY29sb3JdIHx8IFN0eWxlTWFwW2RlZmF1bHRDb2xvcl07XG4gICAgICAgIGNvbnN0IGNvbG9yVCA9IHN0eWxlTWFwLmNvbG9yIHx8IGRlZmF1bHRDb2xvckNUO1xuXG4gICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAyMHB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgICBtaW4td2lkdGg6IDEwcHg7XG4gICAgICAgICAgICBwYWRkaW5nOiAwIDVweDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJHtEVFtzdHlsZU1hcC5iZ119O1xuICAgICAgICAgICAgY29sb3I6ICR7RFRbY29sb3JUXX07XG5cbiAgICAgICAgICAgICYuJHtkb3RDbHN9IHtcbiAgICAgICAgICAgICAgICB3aWR0aDogOHB4O1xuICAgICAgICAgICAgICAgIGhlaWdodDogOHB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgICAgICAgIG1pbi13aWR0aDogMDtcbiAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICBgO1xuICAgIH0pXG4pO1xuXG5pbnRlcmZhY2UgQnViYmxlU3R5bGVJbmZvIHtcbiAgICBiZzogRGVzaWduVG9rZW47XG4gICAgY29sb3I/OiBEZXNpZ25Ub2tlbjtcbn1cblxuZXhwb3J0IGNvbnN0IGJ1YmJsZVN0eWxlTWFwID0ge1xuICAgIHllbGxvdzoge1xuICAgICAgICBiZzogJ1RfQ09MT1JfQkdfV0FSTklOR19EQVJLJyxcbiAgICAgICAgY29sb3I6ICdUX0NPTE9SX0xFR0VORF9PUkFOR0VfOCdcbiAgICB9IGFzIEJ1YmJsZVN0eWxlSW5mbyxcbiAgICBvcmFuZ2U6IHtcbiAgICAgICAgYmc6ICdUX0NPTE9SX0xFR0VORF9PUkFOR0VfNSdcbiAgICB9IGFzIEJ1YmJsZVN0eWxlSW5mbyxcbiAgICBncmF5OiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9CR19ESVNBQkxFRF9EQVJLJ1xuICAgIH0gYXMgQnViYmxlU3R5bGVJbmZvLFxuICAgIHB1cnBsZToge1xuICAgICAgICBiZzogJ1RfQ09MT1JfTEVHRU5EX1BVUlBMRV81J1xuICAgIH0gYXMgQnViYmxlU3R5bGVJbmZvXG59O1xuXG50eXBlIFNCdWJibGVQcm9wcyA9IHtcbiAgICBzdHlsZVR5cGU6IGtleW9mIHR5cGVvZiBidWJibGVTdHlsZU1hcDtcbiAgICBzaXplOiAnc20nIHwgJ21kJztcbiAgICBjdXN0b21TdHlsZT86IHtcbiAgICAgICAgYnViYmxlQ29sb3I/OiBzdHJpbmc7XG4gICAgICAgIGJ1YmJsZUJhY2tncm91bmQ/OiBzdHJpbmc7XG4gICAgfTtcbn07XG5cbmNvbnN0IGRlZmF1bHRCQ29sb3IgPSAnb3JhbmdlJztcbmNvbnN0IGRlZmF1bHRCQ29sb3JUID0gJ1RfQ09MT1JfVEVYVF9TWVNURU1fV0hJVEUnO1xuZXhwb3J0IGNvbnN0IFNCdWJibGVXcmFwID0gc1dyYXA8U0J1YmJsZVByb3BzPih7XG4gICAgY2xhc3NOYW1lOiBwcmVmaXhDbHMgKyAnLWJ1YmJsZS13cmFwJ1xufSkoXG4gICAgc3R5bGVkLmRpdihwcm9wcyA9PiB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIHRoZW1lOiB7IGRlc2lnblRva2VuczogRFQgfSxcbiAgICAgICAgICAgIHN0eWxlVHlwZSA9IGRlZmF1bHRCQ29sb3IsXG4gICAgICAgICAgICBzaXplLFxuICAgICAgICAgICAgY3VzdG9tU3R5bGUgPSB7fVxuICAgICAgICB9ID0gcHJvcHM7XG4gICAgICAgIGNvbnN0IGZvbnRTaXplID0geyBzbTogJzEycHgnLCBtZDogJzE0cHgnIH1bc2l6ZV07XG4gICAgICAgIGNvbnN0IGxpbmVIZWlnaHQgPSB7IHNtOiAnMTZweCcsIG1kOiAnMjBweCcgfVtzaXplXTtcblxuICAgICAgICBjb25zdCBtYXAgPSBidWJibGVTdHlsZU1hcFtzdHlsZVR5cGVdIHx8IGJ1YmJsZVN0eWxlTWFwW2RlZmF1bHRCQ29sb3JdO1xuICAgICAgICBjb25zdCBiZyA9IGN1c3RvbVN0eWxlLmJ1YmJsZUJhY2tncm91bmQgfHwgRFRbbWFwLmJnXTtcbiAgICAgICAgY29uc3QgY29sb3JUID0gbWFwLmNvbG9yIHx8IGRlZmF1bHRCQ29sb3JUO1xuICAgICAgICBjb25zdCBjb2xvciA9IGN1c3RvbVN0eWxlLmJ1YmJsZUNvbG9yIHx8IERUW2NvbG9yVF07XG4gICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogJHtsaW5lSGVpZ2h0fTtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgNHB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAke2ZvbnRTaXplfTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgICAgY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJHtiZ307XG5cbiAgICAgICAgICAgIDo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAwO1xuICAgICAgICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgbGVmdDogNHB4O1xuICAgICAgICAgICAgICAgIGJvdHRvbTogLTVweDtcbiAgICAgICAgICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogNXB4IDVweCAwIDA7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAke2JnfSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */"));
}.bind(void 0), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JhZGdlL3N0eWxlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlCSSIsImZpbGUiOiIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9CYWRnZS9zdHlsZS9pbmRleC50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCBjb25maWcgZnJvbSAnc3JjL2NvbmZpZyc7XG5pbXBvcnQgeyBzV3JhcCwgRGVzaWduVG9rZW4gfSBmcm9tICdzcmMvc3R5bGUnO1xuXG5jb25zdCB7IHByZWZpeENsczogX3ByZWZpeENscyB9ID0gY29uZmlnO1xuZXhwb3J0IGNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJhZGdlJztcbmV4cG9ydCBjb25zdCB3cmFwQ2xzID0gcHJlZml4Q2xzICsgJy1iYWRnZS13cmFwJztcbmV4cG9ydCBjb25zdCBiYWRnZUNscyA9IHByZWZpeENscyArICctYmFkZ2UnO1xuZXhwb3J0IGNvbnN0IGRvdENscyA9IGJhZGdlQ2xzICsgJy1kb3QnO1xuXG5leHBvcnQgY29uc3QgU1dyYXAgPSBzV3JhcCh7XG4gICAgY2xhc3NOYW1lOiBwcmVmaXhDbHNcbn0pKHN0eWxlZCgnZGl2JylgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbmApO1xuXG50eXBlIFNCYWRnZVdyYXBQcm9wcyA9IHsgekluZGV4PzogbnVtYmVyIH07XG5cbmV4cG9ydCBjb25zdCBTQmFkZ2VXcmFwID0gc1dyYXA8U0JhZGdlV3JhcFByb3BzPih7XG4gICAgY2xhc3NOYW1lOiB3cmFwQ2xzXG59KShcbiAgICBzdHlsZWQuZGl2KHByb3BzID0+IHtcbiAgICAgICAgY29uc3QgeyB6SW5kZXggfSA9IHByb3BzO1xuICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgei1pbmRleDogJHt6SW5kZXh9O1xuICAgICAgICBgO1xuICAgIH0pXG4pO1xuXG5pbnRlcmZhY2UgU3R5bGVJbmZvIHtcbiAgICBiZzogRGVzaWduVG9rZW47XG4gICAgY29sb3I/OiBEZXNpZ25Ub2tlbjtcbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlTWFwID0ge1xuICAgIHJlZDoge1xuICAgICAgICBiZzogJ1RfQ09MT1JfTEVHRU5EX1JFRF82J1xuICAgIH0gYXMgU3R5bGVJbmZvLFxuICAgIGdyZWVuOiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9MRUdFTkRfR1JFRU5fNidcbiAgICB9IGFzIFN0eWxlSW5mbyxcbiAgICB5ZWxsb3c6IHtcbiAgICAgICAgYmc6ICdUX0NPTE9SX0xFR0VORF9ZRUxMT1dfNicsXG4gICAgICAgIGNvbG9yOiAnVF9DT0xPUl9URVhUX1NZU1RFTV9CTEFDSydcbiAgICB9IGFzIFN0eWxlSW5mbyxcbiAgICBwcmltYXJ5OiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9CR19QUklNQVJZXzEnXG4gICAgfSBhcyBTdHlsZUluZm9cbn07XG5cbnR5cGUgU0JhZGdlUHJvcHMgPSB7IGRvdD86IGJvb2xlYW47IGNvbG9yPzoga2V5b2YgdHlwZW9mIFN0eWxlTWFwIH07XG5cbmNvbnN0IGRlZmF1bHRDb2xvciA9ICdyZWQnO1xuY29uc3QgZGVmYXVsdENvbG9yQ1QgPSAnVF9DT0xPUl9URVhUX1NZU1RFTV9XSElURSc7XG5leHBvcnQgY29uc3QgU0JhZGdlID0gc1dyYXA8U0JhZGdlUHJvcHMsIEhUTUxTcGFuRWxlbWVudD4oe1xuICAgIGNsYXNzTmFtZTogKHsgZG90IH0pID0+IGNsYXNzbmFtZXMoYmFkZ2VDbHMsIGRvdCAmJiBkb3RDbHMpXG59KShcbiAgICBzdHlsZWQuc3Bhbihwcm9wcyA9PiB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIHRoZW1lOiB7IGRlc2lnblRva2VuczogRFQgfSxcbiAgICAgICAgICAgIGNvbG9yID0gZGVmYXVsdENvbG9yXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3Qgc3R5bGVNYXAgPSBTdHlsZU1hcFtjb2xvcl0gfHwgU3R5bGVNYXBbZGVmYXVsdENvbG9yXTtcbiAgICAgICAgY29uc3QgY29sb3JUID0gc3R5bGVNYXAuY29sb3IgfHwgZGVmYXVsdENvbG9yQ1Q7XG5cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICAgICAgICAgIG1pbi13aWR0aDogMTBweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgNXB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAke0RUW3N0eWxlTWFwLmJnXX07XG4gICAgICAgICAgICBjb2xvcjogJHtEVFtjb2xvclRdfTtcblxuICAgICAgICAgICAgJi4ke2RvdENsc30ge1xuICAgICAgICAgICAgICAgIHdpZHRoOiA4cHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA4cHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgbWluLXdpZHRoOiAwO1xuICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIGA7XG4gICAgfSlcbik7XG5cbmludGVyZmFjZSBCdWJibGVTdHlsZUluZm8ge1xuICAgIGJnOiBEZXNpZ25Ub2tlbjtcbiAgICBjb2xvcj86IERlc2lnblRva2VuO1xufVxuXG5leHBvcnQgY29uc3QgYnViYmxlU3R5bGVNYXAgPSB7XG4gICAgeWVsbG93OiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9CR19XQVJOSU5HX0RBUksnLFxuICAgICAgICBjb2xvcjogJ1RfQ09MT1JfTEVHRU5EX09SQU5HRV84J1xuICAgIH0gYXMgQnViYmxlU3R5bGVJbmZvLFxuICAgIG9yYW5nZToge1xuICAgICAgICBiZzogJ1RfQ09MT1JfTEVHRU5EX09SQU5HRV81J1xuICAgIH0gYXMgQnViYmxlU3R5bGVJbmZvLFxuICAgIGdyYXk6IHtcbiAgICAgICAgYmc6ICdUX0NPTE9SX0JHX0RJU0FCTEVEX0RBUksnXG4gICAgfSBhcyBCdWJibGVTdHlsZUluZm8sXG4gICAgcHVycGxlOiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9MRUdFTkRfUFVSUExFXzUnXG4gICAgfSBhcyBCdWJibGVTdHlsZUluZm9cbn07XG5cbnR5cGUgU0J1YmJsZVByb3BzID0ge1xuICAgIHN0eWxlVHlwZToga2V5b2YgdHlwZW9mIGJ1YmJsZVN0eWxlTWFwO1xuICAgIHNpemU6ICdzbScgfCAnbWQnO1xuICAgIGN1c3RvbVN0eWxlPzoge1xuICAgICAgICBidWJibGVDb2xvcj86IHN0cmluZztcbiAgICAgICAgYnViYmxlQmFja2dyb3VuZD86IHN0cmluZztcbiAgICB9O1xufTtcblxuY29uc3QgZGVmYXVsdEJDb2xvciA9ICdvcmFuZ2UnO1xuY29uc3QgZGVmYXVsdEJDb2xvclQgPSAnVF9DT0xPUl9URVhUX1NZU1RFTV9XSElURSc7XG5leHBvcnQgY29uc3QgU0J1YmJsZVdyYXAgPSBzV3JhcDxTQnViYmxlUHJvcHM+KHtcbiAgICBjbGFzc05hbWU6IHByZWZpeENscyArICctYnViYmxlLXdyYXAnXG59KShcbiAgICBzdHlsZWQuZGl2KHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgdGhlbWU6IHsgZGVzaWduVG9rZW5zOiBEVCB9LFxuICAgICAgICAgICAgc3R5bGVUeXBlID0gZGVmYXVsdEJDb2xvcixcbiAgICAgICAgICAgIHNpemUsXG4gICAgICAgICAgICBjdXN0b21TdHlsZSA9IHt9XG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgZm9udFNpemUgPSB7IHNtOiAnMTJweCcsIG1kOiAnMTRweCcgfVtzaXplXTtcbiAgICAgICAgY29uc3QgbGluZUhlaWdodCA9IHsgc206ICcxNnB4JywgbWQ6ICcyMHB4JyB9W3NpemVdO1xuXG4gICAgICAgIGNvbnN0IG1hcCA9IGJ1YmJsZVN0eWxlTWFwW3N0eWxlVHlwZV0gfHwgYnViYmxlU3R5bGVNYXBbZGVmYXVsdEJDb2xvcl07XG4gICAgICAgIGNvbnN0IGJnID0gY3VzdG9tU3R5bGUuYnViYmxlQmFja2dyb3VuZCB8fCBEVFttYXAuYmddO1xuICAgICAgICBjb25zdCBjb2xvclQgPSBtYXAuY29sb3IgfHwgZGVmYXVsdEJDb2xvclQ7XG4gICAgICAgIGNvbnN0IGNvbG9yID0gY3VzdG9tU3R5bGUuYnViYmxlQ29sb3IgfHwgRFRbY29sb3JUXTtcbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAke2xpbmVIZWlnaHR9O1xuICAgICAgICAgICAgcGFkZGluZzogMCA0cHg7XG4gICAgICAgICAgICBmb250LXNpemU6ICR7Zm9udFNpemV9O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAke2JnfTtcblxuICAgICAgICAgICAgOjphZnRlciB7XG4gICAgICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBsZWZ0OiA0cHg7XG4gICAgICAgICAgICAgICAgYm90dG9tOiAtNXB4O1xuICAgICAgICAgICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiA1cHggNXB4IDAgMDtcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICR7Ymd9IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICBgO1xuICAgIH0pXG4pO1xuIl19 */"));
exports.SBadgeWrap = SBadgeWrap;
var StyleMap = {
  red: {
    bg: 'T_COLOR_LEGEND_RED_6'
  },
  green: {
    bg: 'T_COLOR_LEGEND_GREEN_6'
  },
  yellow: {
    bg: 'T_COLOR_LEGEND_YELLOW_6',
    color: 'T_COLOR_TEXT_SYSTEM_BLACK'
  },
  primary: {
    bg: 'T_COLOR_BG_PRIMARY_1'
  }
};
exports.StyleMap = StyleMap;
var defaultColor = 'red';
var defaultColorCT = 'T_COLOR_TEXT_SYSTEM_WHITE';
var SBadge = (0, _style.sWrap)({
  className: function className(_ref) {
    (0, _newArrowCheck2.default)(this, _this);
    var dot = _ref.dot;
    return (0, _classnames.default)(badgeCls, dot && dotCls);
  }.bind(void 0)
})((0, _styledBase.default)("span", {
  target: "e1rahfzq2",
  label: "SBadge"
})(function (props) {
  (0, _newArrowCheck2.default)(this, _this);
  var DT = props.theme.designTokens,
      _props$color = props.color,
      color = _props$color === void 0 ? defaultColor : _props$color;
  var styleMap = StyleMap[color] || StyleMap[defaultColor];
  var colorT = styleMap.color || defaultColorCT;
  return /*#__PURE__*/(0, _core.css)("display:inline-block;min-height:20px;line-height:20px;min-width:10px;padding:0 5px;border-radius:10px;font-size:12px;text-align:center;white-space:nowrap;background:", DT[styleMap.bg], ";color:", DT[colorT], ";&.", dotCls, "{width:8px;height:8px;padding:0;border-radius:4px;min-width:0;min-height:0;};label:SBadge;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JhZGdlL3N0eWxlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNFa0IiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQmFkZ2Uvc3R5bGUvaW5kZXgudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHsgc1dyYXAsIERlc2lnblRva2VuIH0gZnJvbSAnc3JjL3N0eWxlJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmV4cG9ydCBjb25zdCBwcmVmaXhDbHMgPSBfcHJlZml4Q2xzICsgJy1iYWRnZSc7XG5leHBvcnQgY29uc3Qgd3JhcENscyA9IHByZWZpeENscyArICctYmFkZ2Utd3JhcCc7XG5leHBvcnQgY29uc3QgYmFkZ2VDbHMgPSBwcmVmaXhDbHMgKyAnLWJhZGdlJztcbmV4cG9ydCBjb25zdCBkb3RDbHMgPSBiYWRnZUNscyArICctZG90JztcblxuZXhwb3J0IGNvbnN0IFNXcmFwID0gc1dyYXAoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShzdHlsZWQoJ2RpdicpYFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5gKTtcblxudHlwZSBTQmFkZ2VXcmFwUHJvcHMgPSB7IHpJbmRleD86IG51bWJlciB9O1xuXG5leHBvcnQgY29uc3QgU0JhZGdlV3JhcCA9IHNXcmFwPFNCYWRnZVdyYXBQcm9wcz4oe1xuICAgIGNsYXNzTmFtZTogd3JhcENsc1xufSkoXG4gICAgc3R5bGVkLmRpdihwcm9wcyA9PiB7XG4gICAgICAgIGNvbnN0IHsgekluZGV4IH0gPSBwcm9wcztcbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHotaW5kZXg6ICR7ekluZGV4fTtcbiAgICAgICAgYDtcbiAgICB9KVxuKTtcblxuaW50ZXJmYWNlIFN0eWxlSW5mbyB7XG4gICAgYmc6IERlc2lnblRva2VuO1xuICAgIGNvbG9yPzogRGVzaWduVG9rZW47XG59XG5cbmV4cG9ydCBjb25zdCBTdHlsZU1hcCA9IHtcbiAgICByZWQ6IHtcbiAgICAgICAgYmc6ICdUX0NPTE9SX0xFR0VORF9SRURfNidcbiAgICB9IGFzIFN0eWxlSW5mbyxcbiAgICBncmVlbjoge1xuICAgICAgICBiZzogJ1RfQ09MT1JfTEVHRU5EX0dSRUVOXzYnXG4gICAgfSBhcyBTdHlsZUluZm8sXG4gICAgeWVsbG93OiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9MRUdFTkRfWUVMTE9XXzYnLFxuICAgICAgICBjb2xvcjogJ1RfQ09MT1JfVEVYVF9TWVNURU1fQkxBQ0snXG4gICAgfSBhcyBTdHlsZUluZm8sXG4gICAgcHJpbWFyeToge1xuICAgICAgICBiZzogJ1RfQ09MT1JfQkdfUFJJTUFSWV8xJ1xuICAgIH0gYXMgU3R5bGVJbmZvXG59O1xuXG50eXBlIFNCYWRnZVByb3BzID0geyBkb3Q/OiBib29sZWFuOyBjb2xvcj86IGtleW9mIHR5cGVvZiBTdHlsZU1hcCB9O1xuXG5jb25zdCBkZWZhdWx0Q29sb3IgPSAncmVkJztcbmNvbnN0IGRlZmF1bHRDb2xvckNUID0gJ1RfQ09MT1JfVEVYVF9TWVNURU1fV0hJVEUnO1xuZXhwb3J0IGNvbnN0IFNCYWRnZSA9IHNXcmFwPFNCYWRnZVByb3BzLCBIVE1MU3BhbkVsZW1lbnQ+KHtcbiAgICBjbGFzc05hbWU6ICh7IGRvdCB9KSA9PiBjbGFzc25hbWVzKGJhZGdlQ2xzLCBkb3QgJiYgZG90Q2xzKVxufSkoXG4gICAgc3R5bGVkLnNwYW4ocHJvcHMgPT4ge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICB0aGVtZTogeyBkZXNpZ25Ub2tlbnM6IERUIH0sXG4gICAgICAgICAgICBjb2xvciA9IGRlZmF1bHRDb2xvclxuICAgICAgICB9ID0gcHJvcHM7XG4gICAgICAgIGNvbnN0IHN0eWxlTWFwID0gU3R5bGVNYXBbY29sb3JdIHx8IFN0eWxlTWFwW2RlZmF1bHRDb2xvcl07XG4gICAgICAgIGNvbnN0IGNvbG9yVCA9IHN0eWxlTWFwLmNvbG9yIHx8IGRlZmF1bHRDb2xvckNUO1xuXG4gICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAyMHB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgICBtaW4td2lkdGg6IDEwcHg7XG4gICAgICAgICAgICBwYWRkaW5nOiAwIDVweDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJHtEVFtzdHlsZU1hcC5iZ119O1xuICAgICAgICAgICAgY29sb3I6ICR7RFRbY29sb3JUXX07XG5cbiAgICAgICAgICAgICYuJHtkb3RDbHN9IHtcbiAgICAgICAgICAgICAgICB3aWR0aDogOHB4O1xuICAgICAgICAgICAgICAgIGhlaWdodDogOHB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgICAgICAgIG1pbi13aWR0aDogMDtcbiAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICBgO1xuICAgIH0pXG4pO1xuXG5pbnRlcmZhY2UgQnViYmxlU3R5bGVJbmZvIHtcbiAgICBiZzogRGVzaWduVG9rZW47XG4gICAgY29sb3I/OiBEZXNpZ25Ub2tlbjtcbn1cblxuZXhwb3J0IGNvbnN0IGJ1YmJsZVN0eWxlTWFwID0ge1xuICAgIHllbGxvdzoge1xuICAgICAgICBiZzogJ1RfQ09MT1JfQkdfV0FSTklOR19EQVJLJyxcbiAgICAgICAgY29sb3I6ICdUX0NPTE9SX0xFR0VORF9PUkFOR0VfOCdcbiAgICB9IGFzIEJ1YmJsZVN0eWxlSW5mbyxcbiAgICBvcmFuZ2U6IHtcbiAgICAgICAgYmc6ICdUX0NPTE9SX0xFR0VORF9PUkFOR0VfNSdcbiAgICB9IGFzIEJ1YmJsZVN0eWxlSW5mbyxcbiAgICBncmF5OiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9CR19ESVNBQkxFRF9EQVJLJ1xuICAgIH0gYXMgQnViYmxlU3R5bGVJbmZvLFxuICAgIHB1cnBsZToge1xuICAgICAgICBiZzogJ1RfQ09MT1JfTEVHRU5EX1BVUlBMRV81J1xuICAgIH0gYXMgQnViYmxlU3R5bGVJbmZvXG59O1xuXG50eXBlIFNCdWJibGVQcm9wcyA9IHtcbiAgICBzdHlsZVR5cGU6IGtleW9mIHR5cGVvZiBidWJibGVTdHlsZU1hcDtcbiAgICBzaXplOiAnc20nIHwgJ21kJztcbiAgICBjdXN0b21TdHlsZT86IHtcbiAgICAgICAgYnViYmxlQ29sb3I/OiBzdHJpbmc7XG4gICAgICAgIGJ1YmJsZUJhY2tncm91bmQ/OiBzdHJpbmc7XG4gICAgfTtcbn07XG5cbmNvbnN0IGRlZmF1bHRCQ29sb3IgPSAnb3JhbmdlJztcbmNvbnN0IGRlZmF1bHRCQ29sb3JUID0gJ1RfQ09MT1JfVEVYVF9TWVNURU1fV0hJVEUnO1xuZXhwb3J0IGNvbnN0IFNCdWJibGVXcmFwID0gc1dyYXA8U0J1YmJsZVByb3BzPih7XG4gICAgY2xhc3NOYW1lOiBwcmVmaXhDbHMgKyAnLWJ1YmJsZS13cmFwJ1xufSkoXG4gICAgc3R5bGVkLmRpdihwcm9wcyA9PiB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIHRoZW1lOiB7IGRlc2lnblRva2VuczogRFQgfSxcbiAgICAgICAgICAgIHN0eWxlVHlwZSA9IGRlZmF1bHRCQ29sb3IsXG4gICAgICAgICAgICBzaXplLFxuICAgICAgICAgICAgY3VzdG9tU3R5bGUgPSB7fVxuICAgICAgICB9ID0gcHJvcHM7XG4gICAgICAgIGNvbnN0IGZvbnRTaXplID0geyBzbTogJzEycHgnLCBtZDogJzE0cHgnIH1bc2l6ZV07XG4gICAgICAgIGNvbnN0IGxpbmVIZWlnaHQgPSB7IHNtOiAnMTZweCcsIG1kOiAnMjBweCcgfVtzaXplXTtcblxuICAgICAgICBjb25zdCBtYXAgPSBidWJibGVTdHlsZU1hcFtzdHlsZVR5cGVdIHx8IGJ1YmJsZVN0eWxlTWFwW2RlZmF1bHRCQ29sb3JdO1xuICAgICAgICBjb25zdCBiZyA9IGN1c3RvbVN0eWxlLmJ1YmJsZUJhY2tncm91bmQgfHwgRFRbbWFwLmJnXTtcbiAgICAgICAgY29uc3QgY29sb3JUID0gbWFwLmNvbG9yIHx8IGRlZmF1bHRCQ29sb3JUO1xuICAgICAgICBjb25zdCBjb2xvciA9IGN1c3RvbVN0eWxlLmJ1YmJsZUNvbG9yIHx8IERUW2NvbG9yVF07XG4gICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogJHtsaW5lSGVpZ2h0fTtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgNHB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAke2ZvbnRTaXplfTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgICAgY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJHtiZ307XG5cbiAgICAgICAgICAgIDo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAwO1xuICAgICAgICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgbGVmdDogNHB4O1xuICAgICAgICAgICAgICAgIGJvdHRvbTogLTVweDtcbiAgICAgICAgICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogNXB4IDVweCAwIDA7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAke2JnfSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */"));
}.bind(void 0), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JhZGdlL3N0eWxlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThESSIsImZpbGUiOiIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9CYWRnZS9zdHlsZS9pbmRleC50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCBjb25maWcgZnJvbSAnc3JjL2NvbmZpZyc7XG5pbXBvcnQgeyBzV3JhcCwgRGVzaWduVG9rZW4gfSBmcm9tICdzcmMvc3R5bGUnO1xuXG5jb25zdCB7IHByZWZpeENsczogX3ByZWZpeENscyB9ID0gY29uZmlnO1xuZXhwb3J0IGNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJhZGdlJztcbmV4cG9ydCBjb25zdCB3cmFwQ2xzID0gcHJlZml4Q2xzICsgJy1iYWRnZS13cmFwJztcbmV4cG9ydCBjb25zdCBiYWRnZUNscyA9IHByZWZpeENscyArICctYmFkZ2UnO1xuZXhwb3J0IGNvbnN0IGRvdENscyA9IGJhZGdlQ2xzICsgJy1kb3QnO1xuXG5leHBvcnQgY29uc3QgU1dyYXAgPSBzV3JhcCh7XG4gICAgY2xhc3NOYW1lOiBwcmVmaXhDbHNcbn0pKHN0eWxlZCgnZGl2JylgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbmApO1xuXG50eXBlIFNCYWRnZVdyYXBQcm9wcyA9IHsgekluZGV4PzogbnVtYmVyIH07XG5cbmV4cG9ydCBjb25zdCBTQmFkZ2VXcmFwID0gc1dyYXA8U0JhZGdlV3JhcFByb3BzPih7XG4gICAgY2xhc3NOYW1lOiB3cmFwQ2xzXG59KShcbiAgICBzdHlsZWQuZGl2KHByb3BzID0+IHtcbiAgICAgICAgY29uc3QgeyB6SW5kZXggfSA9IHByb3BzO1xuICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgei1pbmRleDogJHt6SW5kZXh9O1xuICAgICAgICBgO1xuICAgIH0pXG4pO1xuXG5pbnRlcmZhY2UgU3R5bGVJbmZvIHtcbiAgICBiZzogRGVzaWduVG9rZW47XG4gICAgY29sb3I/OiBEZXNpZ25Ub2tlbjtcbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlTWFwID0ge1xuICAgIHJlZDoge1xuICAgICAgICBiZzogJ1RfQ09MT1JfTEVHRU5EX1JFRF82J1xuICAgIH0gYXMgU3R5bGVJbmZvLFxuICAgIGdyZWVuOiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9MRUdFTkRfR1JFRU5fNidcbiAgICB9IGFzIFN0eWxlSW5mbyxcbiAgICB5ZWxsb3c6IHtcbiAgICAgICAgYmc6ICdUX0NPTE9SX0xFR0VORF9ZRUxMT1dfNicsXG4gICAgICAgIGNvbG9yOiAnVF9DT0xPUl9URVhUX1NZU1RFTV9CTEFDSydcbiAgICB9IGFzIFN0eWxlSW5mbyxcbiAgICBwcmltYXJ5OiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9CR19QUklNQVJZXzEnXG4gICAgfSBhcyBTdHlsZUluZm9cbn07XG5cbnR5cGUgU0JhZGdlUHJvcHMgPSB7IGRvdD86IGJvb2xlYW47IGNvbG9yPzoga2V5b2YgdHlwZW9mIFN0eWxlTWFwIH07XG5cbmNvbnN0IGRlZmF1bHRDb2xvciA9ICdyZWQnO1xuY29uc3QgZGVmYXVsdENvbG9yQ1QgPSAnVF9DT0xPUl9URVhUX1NZU1RFTV9XSElURSc7XG5leHBvcnQgY29uc3QgU0JhZGdlID0gc1dyYXA8U0JhZGdlUHJvcHMsIEhUTUxTcGFuRWxlbWVudD4oe1xuICAgIGNsYXNzTmFtZTogKHsgZG90IH0pID0+IGNsYXNzbmFtZXMoYmFkZ2VDbHMsIGRvdCAmJiBkb3RDbHMpXG59KShcbiAgICBzdHlsZWQuc3Bhbihwcm9wcyA9PiB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIHRoZW1lOiB7IGRlc2lnblRva2VuczogRFQgfSxcbiAgICAgICAgICAgIGNvbG9yID0gZGVmYXVsdENvbG9yXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3Qgc3R5bGVNYXAgPSBTdHlsZU1hcFtjb2xvcl0gfHwgU3R5bGVNYXBbZGVmYXVsdENvbG9yXTtcbiAgICAgICAgY29uc3QgY29sb3JUID0gc3R5bGVNYXAuY29sb3IgfHwgZGVmYXVsdENvbG9yQ1Q7XG5cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICAgICAgICAgIG1pbi13aWR0aDogMTBweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgNXB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAke0RUW3N0eWxlTWFwLmJnXX07XG4gICAgICAgICAgICBjb2xvcjogJHtEVFtjb2xvclRdfTtcblxuICAgICAgICAgICAgJi4ke2RvdENsc30ge1xuICAgICAgICAgICAgICAgIHdpZHRoOiA4cHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA4cHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgbWluLXdpZHRoOiAwO1xuICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIGA7XG4gICAgfSlcbik7XG5cbmludGVyZmFjZSBCdWJibGVTdHlsZUluZm8ge1xuICAgIGJnOiBEZXNpZ25Ub2tlbjtcbiAgICBjb2xvcj86IERlc2lnblRva2VuO1xufVxuXG5leHBvcnQgY29uc3QgYnViYmxlU3R5bGVNYXAgPSB7XG4gICAgeWVsbG93OiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9CR19XQVJOSU5HX0RBUksnLFxuICAgICAgICBjb2xvcjogJ1RfQ09MT1JfTEVHRU5EX09SQU5HRV84J1xuICAgIH0gYXMgQnViYmxlU3R5bGVJbmZvLFxuICAgIG9yYW5nZToge1xuICAgICAgICBiZzogJ1RfQ09MT1JfTEVHRU5EX09SQU5HRV81J1xuICAgIH0gYXMgQnViYmxlU3R5bGVJbmZvLFxuICAgIGdyYXk6IHtcbiAgICAgICAgYmc6ICdUX0NPTE9SX0JHX0RJU0FCTEVEX0RBUksnXG4gICAgfSBhcyBCdWJibGVTdHlsZUluZm8sXG4gICAgcHVycGxlOiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9MRUdFTkRfUFVSUExFXzUnXG4gICAgfSBhcyBCdWJibGVTdHlsZUluZm9cbn07XG5cbnR5cGUgU0J1YmJsZVByb3BzID0ge1xuICAgIHN0eWxlVHlwZToga2V5b2YgdHlwZW9mIGJ1YmJsZVN0eWxlTWFwO1xuICAgIHNpemU6ICdzbScgfCAnbWQnO1xuICAgIGN1c3RvbVN0eWxlPzoge1xuICAgICAgICBidWJibGVDb2xvcj86IHN0cmluZztcbiAgICAgICAgYnViYmxlQmFja2dyb3VuZD86IHN0cmluZztcbiAgICB9O1xufTtcblxuY29uc3QgZGVmYXVsdEJDb2xvciA9ICdvcmFuZ2UnO1xuY29uc3QgZGVmYXVsdEJDb2xvclQgPSAnVF9DT0xPUl9URVhUX1NZU1RFTV9XSElURSc7XG5leHBvcnQgY29uc3QgU0J1YmJsZVdyYXAgPSBzV3JhcDxTQnViYmxlUHJvcHM+KHtcbiAgICBjbGFzc05hbWU6IHByZWZpeENscyArICctYnViYmxlLXdyYXAnXG59KShcbiAgICBzdHlsZWQuZGl2KHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgdGhlbWU6IHsgZGVzaWduVG9rZW5zOiBEVCB9LFxuICAgICAgICAgICAgc3R5bGVUeXBlID0gZGVmYXVsdEJDb2xvcixcbiAgICAgICAgICAgIHNpemUsXG4gICAgICAgICAgICBjdXN0b21TdHlsZSA9IHt9XG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgZm9udFNpemUgPSB7IHNtOiAnMTJweCcsIG1kOiAnMTRweCcgfVtzaXplXTtcbiAgICAgICAgY29uc3QgbGluZUhlaWdodCA9IHsgc206ICcxNnB4JywgbWQ6ICcyMHB4JyB9W3NpemVdO1xuXG4gICAgICAgIGNvbnN0IG1hcCA9IGJ1YmJsZVN0eWxlTWFwW3N0eWxlVHlwZV0gfHwgYnViYmxlU3R5bGVNYXBbZGVmYXVsdEJDb2xvcl07XG4gICAgICAgIGNvbnN0IGJnID0gY3VzdG9tU3R5bGUuYnViYmxlQmFja2dyb3VuZCB8fCBEVFttYXAuYmddO1xuICAgICAgICBjb25zdCBjb2xvclQgPSBtYXAuY29sb3IgfHwgZGVmYXVsdEJDb2xvclQ7XG4gICAgICAgIGNvbnN0IGNvbG9yID0gY3VzdG9tU3R5bGUuYnViYmxlQ29sb3IgfHwgRFRbY29sb3JUXTtcbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAke2xpbmVIZWlnaHR9O1xuICAgICAgICAgICAgcGFkZGluZzogMCA0cHg7XG4gICAgICAgICAgICBmb250LXNpemU6ICR7Zm9udFNpemV9O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAke2JnfTtcblxuICAgICAgICAgICAgOjphZnRlciB7XG4gICAgICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBsZWZ0OiA0cHg7XG4gICAgICAgICAgICAgICAgYm90dG9tOiAtNXB4O1xuICAgICAgICAgICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiA1cHggNXB4IDAgMDtcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICR7Ymd9IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICBgO1xuICAgIH0pXG4pO1xuIl19 */"));
exports.SBadge = SBadge;
var bubbleStyleMap = {
  yellow: {
    bg: 'T_COLOR_BG_WARNING_DARK',
    color: 'T_COLOR_LEGEND_ORANGE_8'
  },
  orange: {
    bg: 'T_COLOR_LEGEND_ORANGE_5'
  },
  gray: {
    bg: 'T_COLOR_BG_DISABLED_DARK'
  },
  purple: {
    bg: 'T_COLOR_LEGEND_PURPLE_5'
  }
};
exports.bubbleStyleMap = bubbleStyleMap;
var defaultBColor = 'orange';
var defaultBColorT = 'T_COLOR_TEXT_SYSTEM_WHITE';
var SBubbleWrap = (0, _style.sWrap)({
  className: prefixCls + '-bubble-wrap'
})((0, _styledBase.default)("div", {
  target: "e1rahfzq3",
  label: "SBubbleWrap"
})(function (props) {
  (0, _newArrowCheck2.default)(this, _this);
  var DT = props.theme.designTokens,
      _props$styleType = props.styleType,
      styleType = _props$styleType === void 0 ? defaultBColor : _props$styleType,
      size = props.size,
      _props$customStyle = props.customStyle,
      customStyle = _props$customStyle === void 0 ? {} : _props$customStyle;
  var fontSize = {
    sm: '12px',
    md: '14px'
  }[size];
  var lineHeight = {
    sm: '16px',
    md: '20px'
  }[size];
  var map = bubbleStyleMap[styleType] || bubbleStyleMap[defaultBColor];
  var bg = customStyle.bubbleBackground || DT[map.bg];
  var colorT = map.color || defaultBColorT;
  var color = customStyle.bubbleColor || DT[colorT];
  return /*#__PURE__*/(0, _core.css)("position:absolute;line-height:", lineHeight, ";padding:0 4px;font-size:", fontSize, ";font-weight:bold;color:", color, ";background:", bg, ";::after{content:'';width:0;height:0;position:absolute;left:4px;bottom:-5px;border-style:solid;border-width:5px 5px 0 0;border-color:", bg, " transparent transparent transparent;};label:SBubbleWrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JhZGdlL3N0eWxlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdKa0IiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQmFkZ2Uvc3R5bGUvaW5kZXgudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NyYy9jb25maWcnO1xuaW1wb3J0IHsgc1dyYXAsIERlc2lnblRva2VuIH0gZnJvbSAnc3JjL3N0eWxlJztcblxuY29uc3QgeyBwcmVmaXhDbHM6IF9wcmVmaXhDbHMgfSA9IGNvbmZpZztcbmV4cG9ydCBjb25zdCBwcmVmaXhDbHMgPSBfcHJlZml4Q2xzICsgJy1iYWRnZSc7XG5leHBvcnQgY29uc3Qgd3JhcENscyA9IHByZWZpeENscyArICctYmFkZ2Utd3JhcCc7XG5leHBvcnQgY29uc3QgYmFkZ2VDbHMgPSBwcmVmaXhDbHMgKyAnLWJhZGdlJztcbmV4cG9ydCBjb25zdCBkb3RDbHMgPSBiYWRnZUNscyArICctZG90JztcblxuZXhwb3J0IGNvbnN0IFNXcmFwID0gc1dyYXAoe1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzXG59KShzdHlsZWQoJ2RpdicpYFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5gKTtcblxudHlwZSBTQmFkZ2VXcmFwUHJvcHMgPSB7IHpJbmRleD86IG51bWJlciB9O1xuXG5leHBvcnQgY29uc3QgU0JhZGdlV3JhcCA9IHNXcmFwPFNCYWRnZVdyYXBQcm9wcz4oe1xuICAgIGNsYXNzTmFtZTogd3JhcENsc1xufSkoXG4gICAgc3R5bGVkLmRpdihwcm9wcyA9PiB7XG4gICAgICAgIGNvbnN0IHsgekluZGV4IH0gPSBwcm9wcztcbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHotaW5kZXg6ICR7ekluZGV4fTtcbiAgICAgICAgYDtcbiAgICB9KVxuKTtcblxuaW50ZXJmYWNlIFN0eWxlSW5mbyB7XG4gICAgYmc6IERlc2lnblRva2VuO1xuICAgIGNvbG9yPzogRGVzaWduVG9rZW47XG59XG5cbmV4cG9ydCBjb25zdCBTdHlsZU1hcCA9IHtcbiAgICByZWQ6IHtcbiAgICAgICAgYmc6ICdUX0NPTE9SX0xFR0VORF9SRURfNidcbiAgICB9IGFzIFN0eWxlSW5mbyxcbiAgICBncmVlbjoge1xuICAgICAgICBiZzogJ1RfQ09MT1JfTEVHRU5EX0dSRUVOXzYnXG4gICAgfSBhcyBTdHlsZUluZm8sXG4gICAgeWVsbG93OiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9MRUdFTkRfWUVMTE9XXzYnLFxuICAgICAgICBjb2xvcjogJ1RfQ09MT1JfVEVYVF9TWVNURU1fQkxBQ0snXG4gICAgfSBhcyBTdHlsZUluZm8sXG4gICAgcHJpbWFyeToge1xuICAgICAgICBiZzogJ1RfQ09MT1JfQkdfUFJJTUFSWV8xJ1xuICAgIH0gYXMgU3R5bGVJbmZvXG59O1xuXG50eXBlIFNCYWRnZVByb3BzID0geyBkb3Q/OiBib29sZWFuOyBjb2xvcj86IGtleW9mIHR5cGVvZiBTdHlsZU1hcCB9O1xuXG5jb25zdCBkZWZhdWx0Q29sb3IgPSAncmVkJztcbmNvbnN0IGRlZmF1bHRDb2xvckNUID0gJ1RfQ09MT1JfVEVYVF9TWVNURU1fV0hJVEUnO1xuZXhwb3J0IGNvbnN0IFNCYWRnZSA9IHNXcmFwPFNCYWRnZVByb3BzLCBIVE1MU3BhbkVsZW1lbnQ+KHtcbiAgICBjbGFzc05hbWU6ICh7IGRvdCB9KSA9PiBjbGFzc25hbWVzKGJhZGdlQ2xzLCBkb3QgJiYgZG90Q2xzKVxufSkoXG4gICAgc3R5bGVkLnNwYW4ocHJvcHMgPT4ge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICB0aGVtZTogeyBkZXNpZ25Ub2tlbnM6IERUIH0sXG4gICAgICAgICAgICBjb2xvciA9IGRlZmF1bHRDb2xvclxuICAgICAgICB9ID0gcHJvcHM7XG4gICAgICAgIGNvbnN0IHN0eWxlTWFwID0gU3R5bGVNYXBbY29sb3JdIHx8IFN0eWxlTWFwW2RlZmF1bHRDb2xvcl07XG4gICAgICAgIGNvbnN0IGNvbG9yVCA9IHN0eWxlTWFwLmNvbG9yIHx8IGRlZmF1bHRDb2xvckNUO1xuXG4gICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAyMHB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgICBtaW4td2lkdGg6IDEwcHg7XG4gICAgICAgICAgICBwYWRkaW5nOiAwIDVweDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJHtEVFtzdHlsZU1hcC5iZ119O1xuICAgICAgICAgICAgY29sb3I6ICR7RFRbY29sb3JUXX07XG5cbiAgICAgICAgICAgICYuJHtkb3RDbHN9IHtcbiAgICAgICAgICAgICAgICB3aWR0aDogOHB4O1xuICAgICAgICAgICAgICAgIGhlaWdodDogOHB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgICAgICAgIG1pbi13aWR0aDogMDtcbiAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICBgO1xuICAgIH0pXG4pO1xuXG5pbnRlcmZhY2UgQnViYmxlU3R5bGVJbmZvIHtcbiAgICBiZzogRGVzaWduVG9rZW47XG4gICAgY29sb3I/OiBEZXNpZ25Ub2tlbjtcbn1cblxuZXhwb3J0IGNvbnN0IGJ1YmJsZVN0eWxlTWFwID0ge1xuICAgIHllbGxvdzoge1xuICAgICAgICBiZzogJ1RfQ09MT1JfQkdfV0FSTklOR19EQVJLJyxcbiAgICAgICAgY29sb3I6ICdUX0NPTE9SX0xFR0VORF9PUkFOR0VfOCdcbiAgICB9IGFzIEJ1YmJsZVN0eWxlSW5mbyxcbiAgICBvcmFuZ2U6IHtcbiAgICAgICAgYmc6ICdUX0NPTE9SX0xFR0VORF9PUkFOR0VfNSdcbiAgICB9IGFzIEJ1YmJsZVN0eWxlSW5mbyxcbiAgICBncmF5OiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9CR19ESVNBQkxFRF9EQVJLJ1xuICAgIH0gYXMgQnViYmxlU3R5bGVJbmZvLFxuICAgIHB1cnBsZToge1xuICAgICAgICBiZzogJ1RfQ09MT1JfTEVHRU5EX1BVUlBMRV81J1xuICAgIH0gYXMgQnViYmxlU3R5bGVJbmZvXG59O1xuXG50eXBlIFNCdWJibGVQcm9wcyA9IHtcbiAgICBzdHlsZVR5cGU6IGtleW9mIHR5cGVvZiBidWJibGVTdHlsZU1hcDtcbiAgICBzaXplOiAnc20nIHwgJ21kJztcbiAgICBjdXN0b21TdHlsZT86IHtcbiAgICAgICAgYnViYmxlQ29sb3I/OiBzdHJpbmc7XG4gICAgICAgIGJ1YmJsZUJhY2tncm91bmQ/OiBzdHJpbmc7XG4gICAgfTtcbn07XG5cbmNvbnN0IGRlZmF1bHRCQ29sb3IgPSAnb3JhbmdlJztcbmNvbnN0IGRlZmF1bHRCQ29sb3JUID0gJ1RfQ09MT1JfVEVYVF9TWVNURU1fV0hJVEUnO1xuZXhwb3J0IGNvbnN0IFNCdWJibGVXcmFwID0gc1dyYXA8U0J1YmJsZVByb3BzPih7XG4gICAgY2xhc3NOYW1lOiBwcmVmaXhDbHMgKyAnLWJ1YmJsZS13cmFwJ1xufSkoXG4gICAgc3R5bGVkLmRpdihwcm9wcyA9PiB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIHRoZW1lOiB7IGRlc2lnblRva2VuczogRFQgfSxcbiAgICAgICAgICAgIHN0eWxlVHlwZSA9IGRlZmF1bHRCQ29sb3IsXG4gICAgICAgICAgICBzaXplLFxuICAgICAgICAgICAgY3VzdG9tU3R5bGUgPSB7fVxuICAgICAgICB9ID0gcHJvcHM7XG4gICAgICAgIGNvbnN0IGZvbnRTaXplID0geyBzbTogJzEycHgnLCBtZDogJzE0cHgnIH1bc2l6ZV07XG4gICAgICAgIGNvbnN0IGxpbmVIZWlnaHQgPSB7IHNtOiAnMTZweCcsIG1kOiAnMjBweCcgfVtzaXplXTtcblxuICAgICAgICBjb25zdCBtYXAgPSBidWJibGVTdHlsZU1hcFtzdHlsZVR5cGVdIHx8IGJ1YmJsZVN0eWxlTWFwW2RlZmF1bHRCQ29sb3JdO1xuICAgICAgICBjb25zdCBiZyA9IGN1c3RvbVN0eWxlLmJ1YmJsZUJhY2tncm91bmQgfHwgRFRbbWFwLmJnXTtcbiAgICAgICAgY29uc3QgY29sb3JUID0gbWFwLmNvbG9yIHx8IGRlZmF1bHRCQ29sb3JUO1xuICAgICAgICBjb25zdCBjb2xvciA9IGN1c3RvbVN0eWxlLmJ1YmJsZUNvbG9yIHx8IERUW2NvbG9yVF07XG4gICAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogJHtsaW5lSGVpZ2h0fTtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgNHB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAke2ZvbnRTaXplfTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgICAgY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJHtiZ307XG5cbiAgICAgICAgICAgIDo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAwO1xuICAgICAgICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgbGVmdDogNHB4O1xuICAgICAgICAgICAgICAgIGJvdHRvbTogLTVweDtcbiAgICAgICAgICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogNXB4IDVweCAwIDA7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAke2JnfSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgYDtcbiAgICB9KVxuKTtcbiJdfQ== */"));
}.bind(void 0), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0JhZGdlL3N0eWxlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtJSSIsImZpbGUiOiIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9CYWRnZS9zdHlsZS9pbmRleC50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCBjb25maWcgZnJvbSAnc3JjL2NvbmZpZyc7XG5pbXBvcnQgeyBzV3JhcCwgRGVzaWduVG9rZW4gfSBmcm9tICdzcmMvc3R5bGUnO1xuXG5jb25zdCB7IHByZWZpeENsczogX3ByZWZpeENscyB9ID0gY29uZmlnO1xuZXhwb3J0IGNvbnN0IHByZWZpeENscyA9IF9wcmVmaXhDbHMgKyAnLWJhZGdlJztcbmV4cG9ydCBjb25zdCB3cmFwQ2xzID0gcHJlZml4Q2xzICsgJy1iYWRnZS13cmFwJztcbmV4cG9ydCBjb25zdCBiYWRnZUNscyA9IHByZWZpeENscyArICctYmFkZ2UnO1xuZXhwb3J0IGNvbnN0IGRvdENscyA9IGJhZGdlQ2xzICsgJy1kb3QnO1xuXG5leHBvcnQgY29uc3QgU1dyYXAgPSBzV3JhcCh7XG4gICAgY2xhc3NOYW1lOiBwcmVmaXhDbHNcbn0pKHN0eWxlZCgnZGl2JylgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbmApO1xuXG50eXBlIFNCYWRnZVdyYXBQcm9wcyA9IHsgekluZGV4PzogbnVtYmVyIH07XG5cbmV4cG9ydCBjb25zdCBTQmFkZ2VXcmFwID0gc1dyYXA8U0JhZGdlV3JhcFByb3BzPih7XG4gICAgY2xhc3NOYW1lOiB3cmFwQ2xzXG59KShcbiAgICBzdHlsZWQuZGl2KHByb3BzID0+IHtcbiAgICAgICAgY29uc3QgeyB6SW5kZXggfSA9IHByb3BzO1xuICAgICAgICByZXR1cm4gY3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgei1pbmRleDogJHt6SW5kZXh9O1xuICAgICAgICBgO1xuICAgIH0pXG4pO1xuXG5pbnRlcmZhY2UgU3R5bGVJbmZvIHtcbiAgICBiZzogRGVzaWduVG9rZW47XG4gICAgY29sb3I/OiBEZXNpZ25Ub2tlbjtcbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlTWFwID0ge1xuICAgIHJlZDoge1xuICAgICAgICBiZzogJ1RfQ09MT1JfTEVHRU5EX1JFRF82J1xuICAgIH0gYXMgU3R5bGVJbmZvLFxuICAgIGdyZWVuOiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9MRUdFTkRfR1JFRU5fNidcbiAgICB9IGFzIFN0eWxlSW5mbyxcbiAgICB5ZWxsb3c6IHtcbiAgICAgICAgYmc6ICdUX0NPTE9SX0xFR0VORF9ZRUxMT1dfNicsXG4gICAgICAgIGNvbG9yOiAnVF9DT0xPUl9URVhUX1NZU1RFTV9CTEFDSydcbiAgICB9IGFzIFN0eWxlSW5mbyxcbiAgICBwcmltYXJ5OiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9CR19QUklNQVJZXzEnXG4gICAgfSBhcyBTdHlsZUluZm9cbn07XG5cbnR5cGUgU0JhZGdlUHJvcHMgPSB7IGRvdD86IGJvb2xlYW47IGNvbG9yPzoga2V5b2YgdHlwZW9mIFN0eWxlTWFwIH07XG5cbmNvbnN0IGRlZmF1bHRDb2xvciA9ICdyZWQnO1xuY29uc3QgZGVmYXVsdENvbG9yQ1QgPSAnVF9DT0xPUl9URVhUX1NZU1RFTV9XSElURSc7XG5leHBvcnQgY29uc3QgU0JhZGdlID0gc1dyYXA8U0JhZGdlUHJvcHMsIEhUTUxTcGFuRWxlbWVudD4oe1xuICAgIGNsYXNzTmFtZTogKHsgZG90IH0pID0+IGNsYXNzbmFtZXMoYmFkZ2VDbHMsIGRvdCAmJiBkb3RDbHMpXG59KShcbiAgICBzdHlsZWQuc3Bhbihwcm9wcyA9PiB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIHRoZW1lOiB7IGRlc2lnblRva2VuczogRFQgfSxcbiAgICAgICAgICAgIGNvbG9yID0gZGVmYXVsdENvbG9yXG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3Qgc3R5bGVNYXAgPSBTdHlsZU1hcFtjb2xvcl0gfHwgU3R5bGVNYXBbZGVmYXVsdENvbG9yXTtcbiAgICAgICAgY29uc3QgY29sb3JUID0gc3R5bGVNYXAuY29sb3IgfHwgZGVmYXVsdENvbG9yQ1Q7XG5cbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICAgICAgICAgIG1pbi13aWR0aDogMTBweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgNXB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAke0RUW3N0eWxlTWFwLmJnXX07XG4gICAgICAgICAgICBjb2xvcjogJHtEVFtjb2xvclRdfTtcblxuICAgICAgICAgICAgJi4ke2RvdENsc30ge1xuICAgICAgICAgICAgICAgIHdpZHRoOiA4cHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA4cHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgbWluLXdpZHRoOiAwO1xuICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIGA7XG4gICAgfSlcbik7XG5cbmludGVyZmFjZSBCdWJibGVTdHlsZUluZm8ge1xuICAgIGJnOiBEZXNpZ25Ub2tlbjtcbiAgICBjb2xvcj86IERlc2lnblRva2VuO1xufVxuXG5leHBvcnQgY29uc3QgYnViYmxlU3R5bGVNYXAgPSB7XG4gICAgeWVsbG93OiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9CR19XQVJOSU5HX0RBUksnLFxuICAgICAgICBjb2xvcjogJ1RfQ09MT1JfTEVHRU5EX09SQU5HRV84J1xuICAgIH0gYXMgQnViYmxlU3R5bGVJbmZvLFxuICAgIG9yYW5nZToge1xuICAgICAgICBiZzogJ1RfQ09MT1JfTEVHRU5EX09SQU5HRV81J1xuICAgIH0gYXMgQnViYmxlU3R5bGVJbmZvLFxuICAgIGdyYXk6IHtcbiAgICAgICAgYmc6ICdUX0NPTE9SX0JHX0RJU0FCTEVEX0RBUksnXG4gICAgfSBhcyBCdWJibGVTdHlsZUluZm8sXG4gICAgcHVycGxlOiB7XG4gICAgICAgIGJnOiAnVF9DT0xPUl9MRUdFTkRfUFVSUExFXzUnXG4gICAgfSBhcyBCdWJibGVTdHlsZUluZm9cbn07XG5cbnR5cGUgU0J1YmJsZVByb3BzID0ge1xuICAgIHN0eWxlVHlwZToga2V5b2YgdHlwZW9mIGJ1YmJsZVN0eWxlTWFwO1xuICAgIHNpemU6ICdzbScgfCAnbWQnO1xuICAgIGN1c3RvbVN0eWxlPzoge1xuICAgICAgICBidWJibGVDb2xvcj86IHN0cmluZztcbiAgICAgICAgYnViYmxlQmFja2dyb3VuZD86IHN0cmluZztcbiAgICB9O1xufTtcblxuY29uc3QgZGVmYXVsdEJDb2xvciA9ICdvcmFuZ2UnO1xuY29uc3QgZGVmYXVsdEJDb2xvclQgPSAnVF9DT0xPUl9URVhUX1NZU1RFTV9XSElURSc7XG5leHBvcnQgY29uc3QgU0J1YmJsZVdyYXAgPSBzV3JhcDxTQnViYmxlUHJvcHM+KHtcbiAgICBjbGFzc05hbWU6IHByZWZpeENscyArICctYnViYmxlLXdyYXAnXG59KShcbiAgICBzdHlsZWQuZGl2KHByb3BzID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgdGhlbWU6IHsgZGVzaWduVG9rZW5zOiBEVCB9LFxuICAgICAgICAgICAgc3R5bGVUeXBlID0gZGVmYXVsdEJDb2xvcixcbiAgICAgICAgICAgIHNpemUsXG4gICAgICAgICAgICBjdXN0b21TdHlsZSA9IHt9XG4gICAgICAgIH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgZm9udFNpemUgPSB7IHNtOiAnMTJweCcsIG1kOiAnMTRweCcgfVtzaXplXTtcbiAgICAgICAgY29uc3QgbGluZUhlaWdodCA9IHsgc206ICcxNnB4JywgbWQ6ICcyMHB4JyB9W3NpemVdO1xuXG4gICAgICAgIGNvbnN0IG1hcCA9IGJ1YmJsZVN0eWxlTWFwW3N0eWxlVHlwZV0gfHwgYnViYmxlU3R5bGVNYXBbZGVmYXVsdEJDb2xvcl07XG4gICAgICAgIGNvbnN0IGJnID0gY3VzdG9tU3R5bGUuYnViYmxlQmFja2dyb3VuZCB8fCBEVFttYXAuYmddO1xuICAgICAgICBjb25zdCBjb2xvclQgPSBtYXAuY29sb3IgfHwgZGVmYXVsdEJDb2xvclQ7XG4gICAgICAgIGNvbnN0IGNvbG9yID0gY3VzdG9tU3R5bGUuYnViYmxlQ29sb3IgfHwgRFRbY29sb3JUXTtcbiAgICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAke2xpbmVIZWlnaHR9O1xuICAgICAgICAgICAgcGFkZGluZzogMCA0cHg7XG4gICAgICAgICAgICBmb250LXNpemU6ICR7Zm9udFNpemV9O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAke2JnfTtcblxuICAgICAgICAgICAgOjphZnRlciB7XG4gICAgICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBsZWZ0OiA0cHg7XG4gICAgICAgICAgICAgICAgYm90dG9tOiAtNXB4O1xuICAgICAgICAgICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiA1cHggNXB4IDAgMDtcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICR7Ymd9IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICBgO1xuICAgIH0pXG4pO1xuIl19 */"));
exports.SBubbleWrap = SBubbleWrap;