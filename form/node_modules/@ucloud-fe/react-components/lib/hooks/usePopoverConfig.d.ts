import { ConfigContextType } from '../components/ConfigProvider/ConfigContext';
export declare const getPopoverConfigFromContext: (configContext: ConfigContextType) => {
    getPopupContainer?: ((triggerNode: Element) => Element) | undefined;
    forceAlignWhenScroll?: boolean | undefined;
    forwardPopupContainer?: boolean | ((triggerNode: Element) => Element) | undefined;
    ignorePopover?: boolean | undefined;
} | {
    forwardPopupContainer: (triggerNode: HTMLElement) => ParentNode | null;
    getPopupContainer?: undefined;
} | {
    getPopupContainer: (triggerNode: HTMLElement) => ParentNode | null;
    forwardPopupContainer?: undefined;
};
declare const usePopoverConfig: () => {
    getPopupContainer?: ((triggerNode: Element) => Element) | undefined;
    forceAlignWhenScroll?: boolean | undefined;
    forwardPopupContainer?: boolean | ((triggerNode: Element) => Element) | undefined;
    ignorePopover?: boolean | undefined;
} | {
    forwardPopupContainer: (triggerNode: HTMLElement) => ParentNode | null;
    getPopupContainer?: undefined;
} | {
    getPopupContainer: (triggerNode: HTMLElement) => ParentNode | null;
    forwardPopupContainer?: undefined;
};
export default usePopoverConfig;
export declare const useShouldUsePopoverConfig: () => boolean | undefined;
