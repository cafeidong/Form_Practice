export default Align;
declare class Align extends React.Component<any, any, any> {
    static propTypes: {
        childrenProps: PropTypes.Requireable<object>;
        align: PropTypes.Validator<object>;
        target: PropTypes.Requireable<((...args: any[]) => any) | PropTypes.InferProps<{
            clientX: PropTypes.Requireable<number>;
            clientY: PropTypes.Requireable<number>;
            pageX: PropTypes.Requireable<number>;
            pageY: PropTypes.Requireable<number>;
        }>>;
        onAlign: PropTypes.Requireable<(...args: any[]) => any>;
        monitorBufferTime: PropTypes.Requireable<number>;
        monitorWindowResize: PropTypes.Requireable<boolean>;
        disabled: PropTypes.Requireable<boolean>;
        children: PropTypes.Requireable<any>;
        container: PropTypes.Requireable<(...args: any[]) => any>;
    };
    static defaultProps: {
        target: () => Window & typeof globalThis;
        monitorBufferTime: number;
        monitorWindowResize: boolean;
        disabled: boolean;
    };
    constructor(props: any);
    constructor(props: any, context: any);
    componentDidMount(): void;
    componentDidUpdate(prevProps: any): void;
    sourceRect: any;
    componentWillUnmount(): void;
    startMonitorWindowResize(): void;
    bufferMonitor: {
        (): void;
        clear: () => void;
    } | undefined;
    resizeHandler: any;
    stopMonitorWindowResize(): void;
    forceAlign: () => void;
    render(): {} | null | undefined;
}
import React from "react";
import PropTypes from "prop-types";
